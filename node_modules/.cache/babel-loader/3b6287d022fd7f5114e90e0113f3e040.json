{"ast":null,"code":"import _classCallCheck from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\nimport Headers from './headers.js';\nimport Body, { clone as _clone, extractContentType } from './body.js';\nimport { isRedirect } from './utils/is-redirect.js';\nvar INTERNALS = Symbol('Response internals');\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\n\nvar Response = /*#__PURE__*/function (_Body, _Symbol$toStringTag) {\n  _inherits(Response, _Body);\n\n  var _super = _createSuper(Response);\n\n  function Response() {\n    var _this;\n\n    var body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Response);\n\n    _this = _super.call(this, body, options); // eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\n    var status = options.status != null ? options.status : 200;\n    var headers = new Headers(options.headers);\n\n    if (body !== null && !headers.has('Content-Type')) {\n      var contentType = extractContentType(body, _assertThisInitialized(_this));\n\n      if (contentType) {\n        headers.append('Content-Type', contentType);\n      }\n    }\n\n    _this[INTERNALS] = {\n      type: 'default',\n      url: options.url,\n      status: status,\n      statusText: options.statusText || '',\n      headers: headers,\n      counter: options.counter,\n      highWaterMark: options.highWaterMark\n    };\n    return _this;\n  }\n\n  _createClass(Response, [{\n    key: \"type\",\n    get: function get() {\n      return this[INTERNALS].type;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this[INTERNALS].url || '';\n    }\n  }, {\n    key: \"status\",\n    get: function get() {\n      return this[INTERNALS].status;\n    }\n    /**\n     * Convenience property representing if the request ended normally\n     */\n\n  }, {\n    key: \"ok\",\n    get: function get() {\n      return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n    }\n  }, {\n    key: \"redirected\",\n    get: function get() {\n      return this[INTERNALS].counter > 0;\n    }\n  }, {\n    key: \"statusText\",\n    get: function get() {\n      return this[INTERNALS].statusText;\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      return this[INTERNALS].headers;\n    }\n  }, {\n    key: \"highWaterMark\",\n    get: function get() {\n      return this[INTERNALS].highWaterMark;\n    }\n    /**\n     * Clone this response\n     *\n     * @return  Response\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Response(_clone(this, this.highWaterMark), {\n        type: this.type,\n        url: this.url,\n        status: this.status,\n        statusText: this.statusText,\n        headers: this.headers,\n        ok: this.ok,\n        redirected: this.redirected,\n        size: this.size,\n        highWaterMark: this.highWaterMark\n      });\n    }\n    /**\n     * @param {string} url    The URL that the new response is to originate from.\n     * @param {number} status An optional status code for the response (e.g., 302.)\n     * @returns {Response}    A Response object.\n     */\n\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Response';\n    }\n  }], [{\n    key: \"redirect\",\n    value: function redirect(url) {\n      var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 302;\n\n      if (!isRedirect(status)) {\n        throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n      }\n\n      return new Response(null, {\n        headers: {\n          location: new URL(url).toString()\n        },\n        status: status\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var response = new Response(null, {\n        status: 0,\n        statusText: ''\n      });\n      response[INTERNALS].type = 'error';\n      return response;\n    }\n  }]);\n\n  return Response;\n}(Body, Symbol.toStringTag);\n\nexport { Response as default };\nObject.defineProperties(Response.prototype, {\n  type: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  status: {\n    enumerable: true\n  },\n  ok: {\n    enumerable: true\n  },\n  redirected: {\n    enumerable: true\n  },\n  statusText: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  }\n});","map":null,"metadata":{},"sourceType":"module"}