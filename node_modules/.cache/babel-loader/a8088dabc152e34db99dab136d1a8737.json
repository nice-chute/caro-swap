{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createClass = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a, _b, _c;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vault = exports.VaultData = exports.VaultState = exports.NumberOfShareArgs = exports.AmountArgs = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar bs58_1 = __importDefault(require(\"bs58\"));\n\nvar mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nvar SafetyDepositBox_1 = require(\"./SafetyDepositBox\");\n\nvar VaultProgram_1 = require(\"../VaultProgram\");\n\nvar buffer_1 = require(\"buffer\");\n\nvar AmountArgs = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat) {\n  _inherits(AmountArgs, _mpl_core_1$Borsh$Dat);\n\n  var _super = _createSuper(AmountArgs);\n\n  function AmountArgs() {\n    _classCallCheck(this, AmountArgs);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(AmountArgs);\n}(mpl_core_1.Borsh.Data);\n\nexports.AmountArgs = AmountArgs;\n_a = AmountArgs;\nAmountArgs.SCHEMA = _a.struct([['instruction', 'u8'], ['amount', 'u64']]);\n\nvar NumberOfShareArgs = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat2) {\n  _inherits(NumberOfShareArgs, _mpl_core_1$Borsh$Dat2);\n\n  var _super2 = _createSuper(NumberOfShareArgs);\n\n  function NumberOfShareArgs() {\n    _classCallCheck(this, NumberOfShareArgs);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return _createClass(NumberOfShareArgs);\n}(mpl_core_1.Borsh.Data);\n\nexports.NumberOfShareArgs = NumberOfShareArgs;\n_b = NumberOfShareArgs;\nNumberOfShareArgs.SCHEMA = _b.struct([['instruction', 'u8'], ['numberOfShares', 'u64']]);\nvar VaultState;\n\n(function (VaultState) {\n  VaultState[VaultState[\"Inactive\"] = 0] = \"Inactive\";\n  VaultState[VaultState[\"Active\"] = 1] = \"Active\";\n  VaultState[VaultState[\"Combined\"] = 2] = \"Combined\";\n  VaultState[VaultState[\"Deactivated\"] = 3] = \"Deactivated\";\n})(VaultState = exports.VaultState || (exports.VaultState = {}));\n\nvar VaultData = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat3) {\n  _inherits(VaultData, _mpl_core_1$Borsh$Dat3);\n\n  var _super3 = _createSuper(VaultData);\n\n  function VaultData(args) {\n    var _this;\n\n    _classCallCheck(this, VaultData);\n\n    _this = _super3.call(this, args);\n    _this.key = VaultProgram_1.VaultKey.VaultV1;\n    return _this;\n  }\n\n  return _createClass(VaultData);\n}(mpl_core_1.Borsh.Data);\n\nexports.VaultData = VaultData;\n_c = VaultData;\nVaultData.SCHEMA = _c.struct([['key', 'u8'], ['tokenProgram', 'pubkeyAsString'], ['fractionMint', 'pubkeyAsString'], ['authority', 'pubkeyAsString'], ['fractionTreasury', 'pubkeyAsString'], ['redeemTreasury', 'pubkeyAsString'], ['allowFurtherShareCreation', 'u8'], ['pricingLookupAddress', 'pubkeyAsString'], ['tokenTypeCount', 'u8'], ['state', 'u8'], ['lockedPricePerShare', 'u64']]);\n\nvar Vault = /*#__PURE__*/function (_mpl_core_1$Account) {\n  _inherits(Vault, _mpl_core_1$Account);\n\n  var _super4 = _createSuper(Vault);\n\n  function Vault(pubkey, info) {\n    var _this2;\n\n    _classCallCheck(this, Vault);\n\n    _this2 = _super4.call(this, pubkey, info);\n\n    if (!_this2.assertOwner(VaultProgram_1.VaultProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!Vault.isCompatible(_this2.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    _this2.data = VaultData.deserialize(_this2.info.data);\n    return _this2;\n  }\n\n  _createClass(Vault, [{\n    key: \"getSafetyDepositBoxes\",\n    value: function getSafetyDepositBoxes(connection) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return VaultProgram_1.VaultProgram.getProgramAccounts(connection, {\n                  filters: [{\n                    memcmp: {\n                      offset: 0,\n                      bytes: bs58_1.default.encode(buffer_1.Buffer.from([VaultProgram_1.VaultKey.SafetyDepositBoxV1]))\n                    }\n                  }, {\n                    memcmp: {\n                      offset: 1,\n                      bytes: this.pubkey.toBase58()\n                    }\n                  }]\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent.map(function (account) {\n                  return SafetyDepositBox_1.SafetyDepositBox.from(account);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }], [{\n    key: \"getPDA\",\n    value: function getPDA(pubkey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", VaultProgram_1.VaultProgram.findProgramAddress([buffer_1.Buffer.from(VaultProgram_1.VaultProgram.PREFIX), VaultProgram_1.VaultProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(pubkey).toBuffer()]));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"isCompatible\",\n    value: function isCompatible(data) {\n      return data[0] === VaultProgram_1.VaultKey.VaultV1;\n    }\n  }]);\n\n  return Vault;\n}(mpl_core_1.Account);\n\nexports.Vault = Vault;\nVault.MAX_VAULT_SIZE = 1 + 32 + 32 + 32 + 32 + 1 + 32 + 1 + 32 + 1 + 1 + 8;\nVault.MAX_EXTERNAL_ACCOUNT_SIZE = 1 + 8 + 32 + 1;","map":null,"metadata":{},"sourceType":"script"}