{"ast":null,"code":"import React, { useLayoutEffect, useRef } from 'react';\nexport var Collapse = function Collapse(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      _ref$expanded = _ref.expanded,\n      expanded = _ref$expanded === void 0 ? false : _ref$expanded;\n  var ref = useRef(null);\n  var instant = useRef(true);\n  var transition = 'height 250ms ease-out';\n\n  var openCollapse = function openCollapse() {\n    var node = ref.current;\n    if (!node) return;\n    requestAnimationFrame(function () {\n      node.style.height = node.scrollHeight + 'px';\n    });\n  };\n\n  var closeCollapse = function closeCollapse() {\n    var node = ref.current;\n    if (!node) return;\n    requestAnimationFrame(function () {\n      node.style.height = node.offsetHeight + 'px';\n      node.style.overflow = 'hidden';\n      requestAnimationFrame(function () {\n        node.style.height = '0';\n      });\n    });\n  };\n\n  useLayoutEffect(function () {\n    if (expanded) {\n      openCollapse();\n    } else {\n      closeCollapse();\n    }\n  }, [expanded]);\n  useLayoutEffect(function () {\n    var node = ref.current;\n    if (!node) return;\n\n    function handleComplete() {\n      if (!node) return;\n      node.style.overflow = expanded ? 'initial' : 'hidden';\n\n      if (expanded) {\n        node.style.height = 'auto';\n      }\n    }\n\n    function handleTransitionEnd(event) {\n      if (node && event.target === node && event.propertyName === 'height') {\n        handleComplete();\n      }\n    }\n\n    if (instant.current) {\n      handleComplete();\n      instant.current = false;\n    }\n\n    node.addEventListener('transitionend', handleTransitionEnd);\n    return function () {\n      return node.removeEventListener('transitionend', handleTransitionEnd);\n    };\n  }, [expanded]);\n  return React.createElement(\"div\", {\n    children: children,\n    className: \"wallet-adapter-collapse\",\n    id: id,\n    ref: ref,\n    role: \"region\",\n    style: {\n      height: 0,\n      transition: instant.current ? undefined : transition\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}