{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Account = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar buffer_1 = require(\"buffer\");\n\nvar errors_1 = require(\"../errors\");\n\nvar Account = /*#__PURE__*/function () {\n  function Account(pubkey, info) {\n    _classCallCheck(this, Account);\n\n    this.pubkey = new web3_js_1.PublicKey(pubkey);\n    this.info = info;\n  }\n\n  _createClass(Account, [{\n    key: \"assertOwner\",\n    value: function assertOwner(pubkey) {\n      var _a;\n\n      return (_a = this.info) === null || _a === void 0 ? void 0 : _a.owner.equals(new web3_js_1.PublicKey(pubkey));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _a, _b, _c, _d, _e;\n\n      return {\n        pubkey: this.pubkey.toString(),\n        info: {\n          executable: !!((_a = this.info) === null || _a === void 0 ? void 0 : _a.executable),\n          owner: ((_b = this.info) === null || _b === void 0 ? void 0 : _b.owner) ? new web3_js_1.PublicKey((_c = this.info) === null || _c === void 0 ? void 0 : _c.owner) : null,\n          lamports: (_d = this.info) === null || _d === void 0 ? void 0 : _d.lamports,\n          data: (_e = this.info) === null || _e === void 0 ? void 0 : _e.data.toJSON()\n        },\n        data: this.data\n      };\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.toJSON());\n    }\n  }], [{\n    key: \"from\",\n    value: function from(account) {\n      return new this(account.pubkey, account.info);\n    }\n  }, {\n    key: \"load\",\n    value: function load(connection, pubkey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var info;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Account.getInfo(connection, pubkey);\n\n              case 2:\n                info = _context.sent;\n                return _context.abrupt(\"return\", new this(pubkey, info));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"isCompatible\",\n    value: function isCompatible(_data) {\n      throw new Error(\"method 'isCompatible' is not implemented\");\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo(connection, pubkey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var info;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return connection.getAccountInfo(new web3_js_1.PublicKey(pubkey));\n\n              case 2:\n                info = _context2.sent;\n\n                if (info) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw (0, errors_1.ERROR_ACCOUNT_NOT_FOUND)(pubkey);\n\n              case 5:\n                return _context2.abrupt(\"return\", Object.assign(Object.assign({}, info), {\n                  data: buffer_1.Buffer.from(info === null || info === void 0 ? void 0 : info.data)\n                }));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"getInfos\",\n    value: function getInfos(connection, pubkeys) {\n      var commitment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'recent';\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var BATCH_SIZE, promises, i, results;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                BATCH_SIZE = 99;\n                promises = [];\n\n                for (i = 0; i < pubkeys.length; i += BATCH_SIZE) {\n                  promises.push(Account.getMultipleAccounts(connection, pubkeys.slice(i, Math.min(pubkeys.length, i + BATCH_SIZE)), commitment));\n                }\n\n                results = new Map();\n                _context3.next = 6;\n                return Promise.all(promises);\n\n              case 6:\n                _context3.sent.forEach(function (result) {\n                  var _a;\n\n                  return _toConsumableArray((_a = result === null || result === void 0 ? void 0 : result.entries()) !== null && _a !== void 0 ? _a : []).forEach(function (_ref) {\n                    var _ref2 = _slicedToArray(_ref, 2),\n                        k = _ref2[0],\n                        v = _ref2[1];\n\n                    return results.set(k, v);\n                  });\n                });\n\n                return _context3.abrupt(\"return\", results);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"getMultipleAccounts\",\n    value: function getMultipleAccounts(connection, pubkeys, commitment) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var args, unsafeRes, infos;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                args = connection._buildArgs([pubkeys.map(function (k) {\n                  return k.toString();\n                })], commitment, 'base64');\n                _context4.next = 3;\n                return connection._rpcRequest('getMultipleAccounts', args);\n\n              case 3:\n                unsafeRes = _context4.sent;\n\n                if (!unsafeRes.error) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get info about accounts ' + unsafeRes.error.message);\n\n              case 6:\n                if (unsafeRes.result.value) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 8:\n                infos = unsafeRes.result.value.filter(Boolean).map(function (info) {\n                  return Object.assign(Object.assign({}, info), {\n                    data: buffer_1.Buffer.from(info.data[0], 'base64')\n                  });\n                });\n                return _context4.abrupt(\"return\", infos.reduce(function (acc, info, index) {\n                  acc.set(pubkeys[index], info);\n                  return acc;\n                }, new Map()));\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n    }\n  }]);\n\n  return Account;\n}();\n\nexports.Account = Account;","map":null,"metadata":{},"sourceType":"script"}