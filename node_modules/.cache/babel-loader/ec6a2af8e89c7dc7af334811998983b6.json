{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createClass = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeCreatorOffset = exports.MAX_CREATOR_LEN = exports.MAX_URI_LENGTH = exports.MAX_SYMBOL_LENGTH = exports.MAX_NAME_LENGTH = exports.Metadata = exports.MetadataData = exports.MetadataDataData = exports.DataV2 = exports.Creator = void 0;\n\nvar mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar bs58_1 = __importDefault(require(\"bs58\"));\n\nvar buffer_1 = require(\"buffer\");\n\nvar MetadataProgram_1 = require(\"../MetadataProgram\");\n\nvar Edition_1 = require(\"./Edition\");\n\nvar MasterEdition_1 = require(\"./MasterEdition\");\n\nvar Uses_1 = require(\"./Uses\");\n\nvar Collection_1 = require(\"./Collection\");\n\nvar constants_1 = require(\"./constants\");\n\nvar Creator = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat) {\n  _inherits(Creator, _mpl_core_1$Borsh$Dat);\n\n  var _super = _createSuper(Creator);\n\n  function Creator() {\n    _classCallCheck(this, Creator);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(Creator);\n}(mpl_core_1.Borsh.Data);\n\nexports.Creator = Creator;\nCreator.SCHEMA = Creator.struct([['address', 'pubkeyAsString'], ['verified', 'u8'], ['share', 'u8']]);\n\nvar DataV2 = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat2) {\n  _inherits(DataV2, _mpl_core_1$Borsh$Dat2);\n\n  var _super2 = _createSuper(DataV2);\n\n  function DataV2() {\n    _classCallCheck(this, DataV2);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return _createClass(DataV2);\n}(mpl_core_1.Borsh.Data);\n\nexports.DataV2 = DataV2;\nDataV2.SCHEMA = new Map([].concat(_toConsumableArray(Creator.SCHEMA), _toConsumableArray(Collection_1.Collection.SCHEMA), _toConsumableArray(Uses_1.Uses.SCHEMA), _toConsumableArray(DataV2.struct([['name', 'string'], ['symbol', 'string'], ['uri', 'string'], ['sellerFeeBasisPoints', 'u16'], ['creators', {\n  kind: 'option',\n  type: [Creator]\n}], ['collection', {\n  kind: 'option',\n  type: Collection_1.Collection\n}], ['uses', {\n  kind: 'option',\n  type: Uses_1.Uses\n}]]))));\n\nvar MetadataDataData = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat3) {\n  _inherits(MetadataDataData, _mpl_core_1$Borsh$Dat3);\n\n  var _super3 = _createSuper(MetadataDataData);\n\n  function MetadataDataData(args) {\n    var _this;\n\n    _classCallCheck(this, MetadataDataData);\n\n    _this = _super3.call(this, args);\n    var METADATA_REPLACE = new RegExp(\"\\0\", 'g');\n    _this.name = args.name.replace(METADATA_REPLACE, '');\n    _this.uri = args.uri.replace(METADATA_REPLACE, '');\n    _this.symbol = args.symbol.replace(METADATA_REPLACE, '');\n    return _this;\n  }\n\n  return _createClass(MetadataDataData);\n}(mpl_core_1.Borsh.Data);\n\nexports.MetadataDataData = MetadataDataData;\nMetadataDataData.SCHEMA = new Map([].concat(_toConsumableArray(Creator.SCHEMA), _toConsumableArray(MetadataDataData.struct([['name', 'string'], ['symbol', 'string'], ['uri', 'string'], ['sellerFeeBasisPoints', 'u16'], ['creators', {\n  kind: 'option',\n  type: [Creator]\n}]]))));\n\nvar MetadataData = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat4) {\n  _inherits(MetadataData, _mpl_core_1$Borsh$Dat4);\n\n  var _super4 = _createSuper(MetadataData);\n\n  function MetadataData(args) {\n    var _this2;\n\n    _classCallCheck(this, MetadataData);\n\n    _this2 = _super4.call(this, args);\n    _this2.key = constants_1.MetadataKey.MetadataV1;\n    return _this2;\n  }\n\n  return _createClass(MetadataData);\n}(mpl_core_1.Borsh.Data);\n\nexports.MetadataData = MetadataData;\nMetadataData.SCHEMA = new Map([].concat(_toConsumableArray(MetadataDataData.SCHEMA), _toConsumableArray(Collection_1.Collection.SCHEMA), _toConsumableArray(Uses_1.Uses.SCHEMA), _toConsumableArray(MetadataData.struct([['key', 'u8'], ['updateAuthority', 'pubkeyAsString'], ['mint', 'pubkeyAsString'], ['data', MetadataDataData], ['primarySaleHappened', 'u8'], ['isMutable', 'u8'], ['editionNonce', {\n  kind: 'option',\n  type: 'u8'\n}], ['tokenStandard', {\n  kind: 'option',\n  type: 'u8'\n}], ['collection', {\n  kind: 'option',\n  type: Collection_1.Collection\n}], ['uses', {\n  kind: 'option',\n  type: Uses_1.Uses\n}]]))));\n\nvar Metadata = /*#__PURE__*/function (_mpl_core_1$Account) {\n  _inherits(Metadata, _mpl_core_1$Account);\n\n  var _super5 = _createSuper(Metadata);\n\n  function Metadata(pubkey, info) {\n    var _this3;\n\n    _classCallCheck(this, Metadata);\n\n    _this3 = _super5.call(this, pubkey, info);\n\n    if (!_this3.assertOwner(MetadataProgram_1.MetadataProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    if (!Metadata.isCompatible(_this3.info.data)) {\n      throw (0, mpl_core_1.ERROR_INVALID_ACCOUNT_DATA)();\n    }\n\n    _this3.data = MetadataData.deserialize(_this3.info.data);\n    return _this3;\n  }\n\n  _createClass(Metadata, null, [{\n    key: \"isCompatible\",\n    value: function isCompatible(data) {\n      return data[0] === constants_1.MetadataKey.MetadataV1;\n    }\n  }, {\n    key: \"getPDA\",\n    value: function getPDA(mint) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", MetadataProgram_1.MetadataProgram.findProgramAddress([buffer_1.Buffer.from(MetadataProgram_1.MetadataProgram.PREFIX), MetadataProgram_1.MetadataProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(mint).toBuffer()]));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"findMany\",\n    value: function findMany(connection) {\n      var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var baseFilters;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                baseFilters = [{\n                  memcmp: {\n                    offset: 0,\n                    bytes: bs58_1.default.encode(buffer_1.Buffer.from([constants_1.MetadataKey.MetadataV1]))\n                  }\n                }, filters.updateAuthority && {\n                  memcmp: {\n                    offset: 1,\n                    bytes: new web3_js_1.PublicKey(filters.updateAuthority).toBase58()\n                  }\n                }, filters.mint && {\n                  memcmp: {\n                    offset: 33,\n                    bytes: new web3_js_1.PublicKey(filters.mint).toBase58()\n                  }\n                }].filter(Boolean);\n\n                if (!filters.creators) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 4;\n                return Promise.all(Array.from(Array(mpl_core_1.config.maxCreatorLimit).keys()).reduce(function (prev, i) {\n                  return [].concat(_toConsumableArray(prev), _toConsumableArray(filters.creators.map(function (pubkey) {\n                    return MetadataProgram_1.MetadataProgram.getProgramAccounts(connection, {\n                      filters: [].concat(_toConsumableArray(baseFilters), [{\n                        memcmp: {\n                          offset: (0, exports.computeCreatorOffset)(i),\n                          bytes: new web3_js_1.PublicKey(pubkey).toBase58()\n                        }\n                      }])\n                    });\n                  })));\n                }, []));\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent.flat().map(function (account) {\n                  return Metadata.from(account);\n                }));\n\n              case 7:\n                _context2.next = 9;\n                return MetadataProgram_1.MetadataProgram.getProgramAccounts(connection, {\n                  filters: baseFilters\n                });\n\n              case 9:\n                return _context2.abrupt(\"return\", _context2.sent.map(function (account) {\n                  return Metadata.from(account);\n                }));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"findByOwner\",\n    value: function findByOwner(connection, owner) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var accounts, accountMap, allMetadata;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n\n              case 2:\n                accounts = _context3.sent;\n                accountMap = new Map(accounts.map(function (_ref) {\n                  var data = _ref.data;\n                  return [data.mint.toString(), data];\n                }));\n                _context3.next = 6;\n                return Metadata.findMany(connection);\n\n              case 6:\n                allMetadata = _context3.sent;\n                return _context3.abrupt(\"return\", allMetadata.filter(function (metadata) {\n                  var _a, _b;\n\n                  return accountMap.has(metadata.data.mint) && (((_b = (_a = accountMap === null || accountMap === void 0 ? void 0 : accountMap.get(metadata.data.mint)) === null || _a === void 0 ? void 0 : _a.amount) === null || _b === void 0 ? void 0 : _b.toNumber()) || 0) > 0;\n                }));\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"findByOwnerV2\",\n    value: function findByOwnerV2(connection, owner) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var accounts, accountsWithAmount;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n\n              case 2:\n                accounts = _context4.sent;\n                accountsWithAmount = accounts.map(function (_ref2) {\n                  var data = _ref2.data;\n                  return data;\n                }).filter(function (_ref3) {\n                  var amount = _ref3.amount;\n                  return (amount === null || amount === void 0 ? void 0 : amount.toNumber()) > 0;\n                });\n                _context4.next = 6;\n                return Promise.all(accountsWithAmount.map(function (_ref4) {\n                  var mint = _ref4.mint;\n                  return Metadata.findMany(connection, {\n                    mint: mint\n                  });\n                }));\n\n              case 6:\n                return _context4.abrupt(\"return\", _context4.sent.flat());\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n    }\n  }, {\n    key: \"findDataByOwner\",\n    value: function findDataByOwner(connection, owner) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var accounts, metadataPdaLookups, metadataAddresses, tokenInfo;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return mpl_core_1.TokenAccount.getTokenAccountsByOwner(connection, owner);\n\n              case 2:\n                accounts = _context5.sent;\n                metadataPdaLookups = accounts.reduce(function (memo, _ref5) {\n                  var data = _ref5.data;\n\n                  var _a;\n\n                  return ((_a = data.amount) === null || _a === void 0 ? void 0 : _a.eq(new bn_js_1.default(1))) ? [].concat(_toConsumableArray(memo), [Metadata.getPDA(data.mint)]) : memo;\n                }, []);\n                _context5.next = 6;\n                return Promise.all(metadataPdaLookups);\n\n              case 6:\n                metadataAddresses = _context5.sent;\n                _context5.next = 9;\n                return mpl_core_1.Account.getInfos(connection, metadataAddresses);\n\n              case 9:\n                tokenInfo = _context5.sent;\n                return _context5.abrupt(\"return\", Array.from(tokenInfo.values()).map(function (m) {\n                  return MetadataData.deserialize(m.data);\n                }));\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n    }\n  }, {\n    key: \"getEdition\",\n    value: function getEdition(connection, mint) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var pda, info, key;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Edition_1.Edition.getPDA(mint);\n\n              case 2:\n                pda = _context6.sent;\n                _context6.next = 5;\n                return mpl_core_1.Account.getInfo(connection, pda);\n\n              case 5:\n                info = _context6.sent;\n                key = info === null || info === void 0 ? void 0 : info.data[0];\n                _context6.t0 = key;\n                _context6.next = _context6.t0 === constants_1.MetadataKey.EditionV1 ? 10 : _context6.t0 === constants_1.MetadataKey.MasterEditionV1 ? 11 : _context6.t0 === constants_1.MetadataKey.MasterEditionV2 ? 11 : 12;\n                break;\n\n              case 10:\n                return _context6.abrupt(\"return\", new Edition_1.Edition(pda, info));\n\n              case 11:\n                return _context6.abrupt(\"return\", new MasterEdition_1.MasterEdition(pda, info));\n\n              case 12:\n                return _context6.abrupt(\"return\");\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n    }\n  }]);\n\n  return Metadata;\n}(mpl_core_1.Account);\n\nexports.Metadata = Metadata;\nexports.MAX_NAME_LENGTH = 32;\nexports.MAX_SYMBOL_LENGTH = 10;\nexports.MAX_URI_LENGTH = 200;\nexports.MAX_CREATOR_LEN = 32 + 1 + 1;\n\nvar computeCreatorOffset = function computeCreatorOffset(index) {\n  return 1 + 32 + 32 + 4 + exports.MAX_NAME_LENGTH + 4 + exports.MAX_URI_LENGTH + 4 + exports.MAX_SYMBOL_LENGTH + 2 + 1 + 4 + index * exports.MAX_CREATOR_LEN;\n};\n\nexports.computeCreatorOffset = computeCreatorOffset;","map":null,"metadata":{},"sourceType":"script"}