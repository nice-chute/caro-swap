{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { Button } from './Button';\nimport { WalletIcon } from './WalletIcon';\nexport var WalletConnectButton = function WalletConnectButton(_a) {\n  var children = _a.children,\n      disabled = _a.disabled,\n      onClick = _a.onClick,\n      props = __rest(_a, [\"children\", \"disabled\", \"onClick\"]);\n\n  var _useWallet = useWallet(),\n      wallet = _useWallet.wallet,\n      connect = _useWallet.connect,\n      connecting = _useWallet.connecting,\n      connected = _useWallet.connected;\n\n  var handleClick = useCallback(function (event) {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) connect().catch(function () {});\n  }, [onClick, connect]);\n  var content = useMemo(function () {\n    if (children) return children;\n    if (connecting) return 'Connecting ...';\n    if (connected) return 'Connected';\n    if (wallet) return 'Connect';\n    return 'Connect Wallet';\n  }, [children, connecting, connected, wallet]);\n  return React.createElement(Button, Object.assign({\n    className: \"wallet-adapter-button-trigger\",\n    disabled: disabled || !wallet || connecting || connected,\n    startIcon: wallet ? React.createElement(WalletIcon, {\n      wallet: wallet\n    }) : undefined,\n    onClick: handleClick\n  }, props), content);\n};","map":null,"metadata":{},"sourceType":"module"}