{"ast":null,"code":"import _regeneratorRuntime from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { BaseMessageSignerWalletAdapter, WalletAdapterNetwork, WalletConfigError, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletLoadError, WalletNotConnectedError, WalletNotReadyError, WalletSignMessageError, WalletSignTransactionError, WalletTimeoutError, WalletWindowBlockedError, WalletWindowClosedError } from '@solana/wallet-adapter-base';\nexport var SolletWalletAdapter = /*#__PURE__*/function (_BaseMessageSignerWal) {\n  _inherits(SolletWalletAdapter, _BaseMessageSignerWal);\n\n  var _super = _createSuper(SolletWalletAdapter);\n\n  function SolletWalletAdapter() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SolletWalletAdapter);\n\n    _this = _super.call(this);\n\n    _this._disconnected = function () {\n      var wallet = _this._wallet;\n\n      if (wallet) {\n        wallet.off('disconnect', _this._disconnected);\n        _this._wallet = null;\n\n        _this.emit('error', new WalletDisconnectedError());\n\n        _this.emit('disconnect');\n      }\n    };\n\n    _this._provider = config.provider;\n    _this._network = config.network || WalletAdapterNetwork.Mainnet;\n    _this._connecting = false;\n    _this._wallet = null;\n    return _this;\n  }\n\n  _createClass(SolletWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      var _a;\n\n      return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      var _a;\n\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n    }\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      var _a, _b;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(typeof window === 'undefined' || typeof document === 'undefined')) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 2:\n                if (!(typeof this._provider === 'string' || typeof ((_a = this._provider) === null || _a === void 0 ? void 0 : _a.postMessage) === 'function')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", true);\n\n              case 4:\n                if (!(document.readyState === 'complete')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", typeof ((_b = window.sollet) === null || _b === void 0 ? void 0 : _b.postMessage) === 'function');\n\n              case 6:\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  function listener() {\n                    var _a;\n\n                    window.removeEventListener('load', listener);\n                    resolve(typeof ((_a = window.sollet) === null || _a === void 0 ? void 0 : _a.postMessage) === 'function');\n                  }\n\n                  window.addEventListener('load', listener);\n                }));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var provider, SolWalletAdapter, wallet, handleDisconnect, timeout, interval;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                _context2.next = 6;\n                return this.ready();\n\n              case 6:\n                if (_context2.sent) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                throw new WalletNotReadyError();\n\n              case 8:\n                provider = this._provider || window.sollet;\n                _context2.prev = 9;\n                _context2.next = 12;\n                return import('@project-serum/sol-wallet-adapter');\n\n              case 12:\n                SolWalletAdapter = _context2.sent;\n                _context2.next = 18;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](9);\n                throw new WalletLoadError(_context2.t0 === null || _context2.t0 === void 0 ? void 0 : _context2.t0.message, _context2.t0);\n\n              case 18:\n                _context2.prev = 18;\n                wallet = new SolWalletAdapter.default(provider, this._network);\n                _context2.next = 25;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.t1 = _context2[\"catch\"](18);\n                throw new WalletConfigError(_context2.t1 === null || _context2.t1 === void 0 ? void 0 : _context2.t1.message, _context2.t1);\n\n              case 25:\n                _context2.prev = 25;\n                // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup or extension is closed or blocked\n                handleDisconnect = wallet.handleDisconnect;\n                _context2.prev = 27;\n                _context2.next = 30;\n                return new Promise(function (resolve, reject) {\n                  var connect = function connect() {\n                    if (timeout) clearTimeout(timeout);\n                    wallet.off('connect', connect);\n                    resolve();\n                  };\n\n                  wallet.handleDisconnect = function () {\n                    wallet.off('connect', connect);\n                    reject(new WalletWindowClosedError());\n\n                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                      args[_key] = arguments[_key];\n                    }\n\n                    return handleDisconnect.apply(wallet, args);\n                  };\n\n                  wallet.on('connect', connect);\n                  wallet.connect().catch(function (reason) {\n                    wallet.off('connect', connect);\n                    reject(reason);\n                  });\n\n                  if (typeof provider === 'string') {\n                    var count = 0;\n                    interval = setInterval(function () {\n                      var popup = wallet._popup;\n\n                      if (popup) {\n                        if (popup.closed) reject(new WalletWindowClosedError());\n                      } else {\n                        if (count > 50) reject(new WalletWindowBlockedError());\n                      }\n\n                      count++;\n                    }, 100);\n                  } else {\n                    // HACK: sol-wallet-adapter doesn't reject or emit an event if the extension is closed or ignored\n                    timeout = setTimeout(function () {\n                      return reject(new WalletTimeoutError());\n                    }, 10000);\n                  }\n                });\n\n              case 30:\n                _context2.prev = 30;\n                wallet.handleDisconnect = handleDisconnect;\n                if (interval) clearInterval(interval);\n                return _context2.finish(30);\n\n              case 34:\n                _context2.next = 41;\n                break;\n\n              case 36:\n                _context2.prev = 36;\n                _context2.t2 = _context2[\"catch\"](25);\n\n                if (!(_context2.t2 instanceof WalletError)) {\n                  _context2.next = 40;\n                  break;\n                }\n\n                throw _context2.t2;\n\n              case 40:\n                throw new WalletConnectionError(_context2.t2 === null || _context2.t2 === void 0 ? void 0 : _context2.t2.message, _context2.t2);\n\n              case 41:\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this.emit('connect');\n                _context2.next = 50;\n                break;\n\n              case 46:\n                _context2.prev = 46;\n                _context2.t3 = _context2[\"catch\"](0);\n                this.emit('error', _context2.t3);\n                throw _context2.t3;\n\n              case 50:\n                _context2.prev = 50;\n                this._connecting = false;\n                return _context2.finish(50);\n\n              case 53:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 46, 50, 53], [9, 15], [18, 22], [25, 36], [27,, 30, 34]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var wallet, handleDisconnect;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                wallet = this._wallet;\n\n                if (!wallet) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null; // HACK: sol-wallet-adapter doesn't reliably fulfill its promise or emit an event on disconnect\n\n                handleDisconnect = wallet.handleDisconnect;\n                _context3.prev = 5;\n                _context3.next = 8;\n                return new Promise(function (resolve, reject) {\n                  var timeout = setTimeout(function () {\n                    return resolve();\n                  }, 250);\n\n                  wallet.handleDisconnect = function () {\n                    clearTimeout(timeout);\n                    resolve(); // HACK: sol-wallet-adapter rejects with an uncaught promise error\n\n                    // HACK: sol-wallet-adapter rejects with an uncaught promise error\n                    wallet._responsePromises = new Map();\n\n                    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                      args[_key2] = arguments[_key2];\n                    }\n\n                    return handleDisconnect.apply(wallet, args);\n                  };\n\n                  wallet.disconnect().then(function () {\n                    clearTimeout(timeout);\n                    resolve();\n                  }, function (error) {\n                    clearTimeout(timeout); // HACK: sol-wallet-adapter rejects with an error on disconnect\n\n                    // HACK: sol-wallet-adapter rejects with an error on disconnect\n                    if ((error === null || error === void 0 ? void 0 : error.message) === 'Wallet disconnected') {\n                      resolve();\n                    } else {\n                      reject(error);\n                    }\n                  });\n                });\n\n              case 8:\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](5);\n                this.emit('error', new WalletDisconnectionError(_context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.message, _context3.t0));\n\n              case 13:\n                _context3.prev = 13;\n                wallet.handleDisconnect = handleDisconnect;\n                return _context3.finish(13);\n\n              case 16:\n                this.emit('disconnect');\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 10, 13, 16]]);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context4.prev = 4;\n                _context4.next = 7;\n                return wallet.signTransaction(transaction);\n\n              case 7:\n                _context4.t0 = _context4.sent;\n\n                if (_context4.t0) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.t0 = transaction;\n\n              case 10:\n                return _context4.abrupt(\"return\", _context4.t0);\n\n              case 13:\n                _context4.prev = 13;\n                _context4.t1 = _context4[\"catch\"](4);\n                throw new WalletSignTransactionError(_context4.t1 === null || _context4.t1 === void 0 ? void 0 : _context4.t1.message, _context4.t1);\n\n              case 16:\n                _context4.next = 22;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t2 = _context4[\"catch\"](0);\n                this.emit('error', _context4.t2);\n                throw _context4.t2;\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context5.prev = 4;\n                _context5.next = 7;\n                return wallet.signAllTransactions(transactions);\n\n              case 7:\n                _context5.t0 = _context5.sent;\n\n                if (_context5.t0) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                _context5.t0 = transactions;\n\n              case 10:\n                return _context5.abrupt(\"return\", _context5.t0);\n\n              case 13:\n                _context5.prev = 13;\n                _context5.t1 = _context5[\"catch\"](4);\n                throw new WalletSignTransactionError(_context5.t1 === null || _context5.t1 === void 0 ? void 0 : _context5.t1.message, _context5.t1);\n\n              case 16:\n                _context5.next = 22;\n                break;\n\n              case 18:\n                _context5.prev = 18;\n                _context5.t2 = _context5[\"catch\"](0);\n                this.emit('error', _context5.t2);\n                throw _context5.t2;\n\n              case 22:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var wallet, _yield$wallet$sign, signature;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context6.prev = 4;\n                _context6.next = 7;\n                return wallet.sign(message, 'utf8');\n\n              case 7:\n                _yield$wallet$sign = _context6.sent;\n                signature = _yield$wallet$sign.signature;\n                return _context6.abrupt(\"return\", Uint8Array.from(signature));\n\n              case 12:\n                _context6.prev = 12;\n                _context6.t0 = _context6[\"catch\"](4);\n                throw new WalletSignMessageError(_context6.t0 === null || _context6.t0 === void 0 ? void 0 : _context6.t0.message, _context6.t0);\n\n              case 15:\n                _context6.next = 21;\n                break;\n\n              case 17:\n                _context6.prev = 17;\n                _context6.t1 = _context6[\"catch\"](0);\n                this.emit('error', _context6.t1);\n                throw _context6.t1;\n\n              case 21:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 17], [4, 12]]);\n      }));\n    }\n  }]);\n\n  return SolletWalletAdapter;\n}(BaseMessageSignerWalletAdapter);","map":null,"metadata":{},"sourceType":"module"}