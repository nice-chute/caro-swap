{"ast":null,"code":"import _regeneratorRuntime from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\nvar Wallet = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Wallet, _EventEmitter);\n\n  var _super = _createSuper(Wallet);\n\n  function Wallet(provider, _network) {\n    var _this;\n\n    _classCallCheck(this, Wallet);\n\n    _this = _super.call(this);\n    _this._network = _network;\n    _this._publicKey = null;\n    _this._popup = null;\n    _this._handlerAdded = false;\n    _this._nextRequestId = 1;\n    _this._autoApprove = false;\n    _this._responsePromises = new Map();\n\n    _this.handleMessage = function (e) {\n      var _a;\n\n      if (_this._injectedProvider && e.source === window || e.origin === ((_a = _this._providerUrl) === null || _a === void 0 ? void 0 : _a.origin) && e.source === _this._popup) {\n        if (e.data.method === 'connected') {\n          var newPublicKey = new PublicKey(e.data.params.publicKey);\n\n          if (!_this._publicKey || !_this._publicKey.equals(newPublicKey)) {\n            if (_this._publicKey && !_this._publicKey.equals(newPublicKey)) {\n              _this.handleDisconnect();\n            }\n\n            _this._publicKey = newPublicKey;\n            _this._autoApprove = !!e.data.params.autoApprove;\n\n            _this.emit('connect', _this._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          _this.handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          var promises = _this._responsePromises.get(e.data.id);\n\n          if (promises) {\n            var _promises = _slicedToArray(promises, 2),\n                resolve = _promises[0],\n                reject = _promises[1];\n\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n\n    _this._beforeUnload = function () {\n      void _this.disconnect();\n    };\n\n    if (isInjectedProvider(provider)) {\n      _this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      _this._providerUrl = new URL(provider);\n      _this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: _this._network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n\n    return _this;\n  }\n\n  _createClass(Wallet, [{\n    key: \"handleConnect\",\n    value: function handleConnect() {\n      var _this2 = this;\n\n      var _a;\n\n      if (!this._handlerAdded) {\n        this._handlerAdded = true;\n        window.addEventListener('message', this.handleMessage);\n        window.addEventListener('beforeunload', this._beforeUnload);\n      }\n\n      if (this._injectedProvider) {\n        return new Promise(function (resolve) {\n          void _this2.sendRequest('connect', {});\n          resolve();\n        });\n      } else {\n        window.name = 'parent';\n        this._popup = window.open((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.toString(), '_blank', 'location,resizable,width=460,height=675');\n        return new Promise(function (resolve) {\n          _this2.once('connect', resolve);\n        });\n      }\n    }\n  }, {\n    key: \"handleDisconnect\",\n    value: function handleDisconnect() {\n      var _this3 = this;\n\n      if (this._handlerAdded) {\n        this._handlerAdded = false;\n        window.removeEventListener('message', this.handleMessage);\n        window.removeEventListener('beforeunload', this._beforeUnload);\n      }\n\n      if (this._publicKey) {\n        this._publicKey = null;\n        this.emit('disconnect');\n      }\n\n      this._responsePromises.forEach(function (_ref, id) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            reject = _ref2[1];\n\n        _this3._responsePromises.delete(id);\n\n        reject(new Error('Wallet disconnected'));\n      });\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(method, params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this4 = this;\n\n        var requestId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(method !== 'connect' && !this.connected)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('Wallet not connected');\n\n              case 2:\n                requestId = this._nextRequestId;\n                ++this._nextRequestId;\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var _a, _b, _c, _d;\n\n                  _this4._responsePromises.set(requestId, [resolve, reject]);\n\n                  if (_this4._injectedProvider) {\n                    _this4._injectedProvider.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: Object.assign({\n                        network: _this4._network\n                      }, params)\n                    });\n                  } else {\n                    (_a = _this4._popup) === null || _a === void 0 ? void 0 : _a.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: params\n                    }, (_c = (_b = _this4._providerUrl) === null || _b === void 0 ? void 0 : _b.origin) !== null && _c !== void 0 ? _c : '');\n\n                    if (!_this4.autoApprove) {\n                      (_d = _this4._popup) === null || _d === void 0 ? void 0 : _d.focus();\n                    }\n                  }\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._publicKey !== null;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return this._autoApprove;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this._popup) {\n                  this._popup.close();\n                }\n\n                _context2.next = 3;\n                return this.handleConnect();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._injectedProvider) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.sendRequest('disconnect', {});\n\n              case 3:\n                if (this._popup) {\n                  this._popup.close();\n                }\n\n                this.handleDisconnect();\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(data, display) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response, signature, publicKey;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (data instanceof Uint8Array) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw new Error('Data must be an instance of Uint8Array');\n\n              case 2:\n                _context4.next = 4;\n                return this.sendRequest('sign', {\n                  data: data,\n                  display: display\n                });\n\n              case 4:\n                response = _context4.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                return _context4.abrupt(\"return\", {\n                  signature: signature,\n                  publicKey: publicKey\n                });\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response, signature, publicKey;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.sendRequest('signTransaction', {\n                  message: bs58.encode(transaction.serializeMessage())\n                });\n\n              case 2:\n                response = _context5.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                transaction.addSignature(publicKey, signature);\n                return _context5.abrupt(\"return\", transaction);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var response, signatures, publicKey;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.sendRequest('signAllTransactions', {\n                  messages: transactions.map(function (tx) {\n                    return bs58.encode(tx.serializeMessage());\n                  })\n                });\n\n              case 2:\n                response = _context6.sent;\n                signatures = response.signatures.map(function (s) {\n                  return bs58.decode(s);\n                });\n                publicKey = new PublicKey(response.publicKey);\n                transactions = transactions.map(function (tx, idx) {\n                  tx.addSignature(publicKey, signatures[idx]);\n                  return tx;\n                });\n                return _context6.abrupt(\"return\", transactions);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"diffieHellman\",\n    value: function diffieHellman(publicKey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (publicKey instanceof Uint8Array) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                throw new Error('Data must be an instance of Uint8Array');\n\n              case 2:\n                _context7.next = 4;\n                return this.sendRequest('diffieHellman', {\n                  publicKey: publicKey\n                });\n\n              case 4:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }]);\n\n  return Wallet;\n}(EventEmitter);\n\nexport { Wallet as default };\n\nfunction isString(a) {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a) {\n  return isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function';\n}\n\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}","map":null,"metadata":{},"sourceType":"module"}