{"ast":null,"code":"import _slicedToArray from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from './Button';\nimport { Collapse } from './Collapse';\nimport { useWalletModal } from './useWalletModal';\nimport { WalletListItem } from './WalletListItem';\nexport var WalletModal = function WalletModal(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      logo = _ref.logo,\n      _ref$featuredWallets = _ref.featuredWallets,\n      featuredWallets = _ref$featuredWallets === void 0 ? 3 : _ref$featuredWallets,\n      _ref$container = _ref.container,\n      container = _ref$container === void 0 ? 'body' : _ref$container;\n  var ref = useRef(null);\n\n  var _useWallet = useWallet(),\n      wallets = _useWallet.wallets,\n      select = _useWallet.select;\n\n  var _useWalletModal = useWalletModal(),\n      setVisible = _useWalletModal.setVisible;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fadeIn = _useState4[0],\n      setFadeIn = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      portal = _useState6[0],\n      setPortal = _useState6[1];\n\n  var _useMemo = useMemo(function () {\n    return [wallets.slice(0, featuredWallets), wallets.slice(featuredWallets)];\n  }, [wallets, featuredWallets]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      featured = _useMemo2[0],\n      more = _useMemo2[1];\n\n  var hideModal = useCallback(function () {\n    setFadeIn(false);\n    setTimeout(function () {\n      return setVisible(false);\n    }, 150);\n  }, [setFadeIn, setVisible]);\n  var handleClose = useCallback(function (event) {\n    event.preventDefault();\n    hideModal();\n  }, [hideModal]);\n  var handleWalletClick = useCallback(function (event, walletName) {\n    select(walletName);\n    handleClose(event);\n  }, [select, handleClose]);\n  var handleCollapseClick = useCallback(function () {\n    return setExpanded(!expanded);\n  }, [setExpanded, expanded]);\n  var handleTabKey = useCallback(function (event) {\n    var node = ref.current;\n    if (!node) return; // here we query all focusable elements\n\n    var focusableElements = node.querySelectorAll('button');\n    var firstElement = focusableElements[0];\n    var lastElement = focusableElements[focusableElements.length - 1];\n\n    if (event.shiftKey) {\n      // if going backward by pressing tab and firstElement is active, shift focus to last focusable element\n      if (document.activeElement === firstElement) {\n        lastElement.focus();\n        event.preventDefault();\n      }\n    } else {\n      // if going forward by pressing tab and lastElement is active, shift focus to first focusable element\n      if (document.activeElement === lastElement) {\n        firstElement.focus();\n        event.preventDefault();\n      }\n    }\n  }, [ref]);\n  useLayoutEffect(function () {\n    var handleKeyDown = function handleKeyDown(event) {\n      if (event.key === 'Escape') {\n        hideModal();\n      } else if (event.key === 'Tab') {\n        handleTabKey(event);\n      }\n    }; // Get original overflow\n\n\n    var _window$getComputedSt = window.getComputedStyle(document.body),\n        overflow = _window$getComputedSt.overflow; // Hack to enable fade in animation after mount\n\n\n    setTimeout(function () {\n      return setFadeIn(true);\n    }, 0); // Prevent scrolling on mount\n\n    document.body.style.overflow = 'hidden'; // Listen for keydown events\n\n    window.addEventListener('keydown', handleKeyDown, false);\n    return function () {\n      // Re-enable scrolling when component unmounts\n      document.body.style.overflow = overflow;\n      window.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [hideModal, handleTabKey]);\n  useLayoutEffect(function () {\n    return setPortal(document.querySelector(container));\n  }, [setPortal, container]);\n  return portal && createPortal(React.createElement(\"div\", {\n    \"aria-labelledby\": \"wallet-adapter-modal-title\",\n    \"aria-modal\": \"true\",\n    className: \"wallet-adapter-modal \".concat(fadeIn && 'wallet-adapter-modal-fade-in', \" \").concat(className),\n    ref: ref,\n    role: \"dialog\"\n  }, React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-container\"\n  }, React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-wrapper \".concat(!logo && 'wallet-adapter-modal-wrapper-no-logo')\n  }, logo && React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-logo-wrapper\"\n  }, typeof logo === 'string' ? React.createElement(\"img\", {\n    alt: \"logo\",\n    className: \"wallet-adapter-modal-logo\",\n    src: logo\n  }) : logo), React.createElement(\"h1\", {\n    className: \"wallet-adapter-modal-title\",\n    id: \"wallet-adapter-modal-title\"\n  }, \"Connect Wallet\"), React.createElement(\"button\", {\n    onClick: handleClose,\n    className: \"wallet-adapter-modal-button-close\"\n  }, React.createElement(\"svg\", {\n    width: \"14\",\n    height: \"14\"\n  }, React.createElement(\"path\", {\n    d: \"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"\n  }))), React.createElement(\"ul\", {\n    className: \"wallet-adapter-modal-list\"\n  }, featured.map(function (wallet) {\n    return React.createElement(WalletListItem, {\n      key: wallet.name,\n      handleClick: function handleClick(event) {\n        return handleWalletClick(event, wallet.name);\n      },\n      wallet: wallet\n    });\n  })), more.length ? React.createElement(React.Fragment, null, React.createElement(Collapse, {\n    expanded: expanded,\n    id: \"wallet-adapter-modal-collapse\"\n  }, React.createElement(\"ul\", {\n    className: \"wallet-adapter-modal-list\"\n  }, more.map(function (wallet) {\n    return React.createElement(WalletListItem, {\n      key: wallet.name,\n      handleClick: function handleClick(event) {\n        return handleWalletClick(event, wallet.name);\n      },\n      tabIndex: expanded ? 0 : -1,\n      wallet: wallet\n    });\n  }))), React.createElement(Button, {\n    \"aria-controls\": \"wallet-adapter-modal-collapse\",\n    \"aria-expanded\": expanded,\n    className: \"wallet-adapter-modal-collapse-button \".concat(expanded && 'wallet-adapter-modal-collapse-button-active'),\n    endIcon: React.createElement(\"svg\", {\n      width: \"11\",\n      height: \"6\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, React.createElement(\"path\", {\n      d: \"m5.938 5.73 4.28-4.126a.915.915 0 0 0 0-1.322 1 1 0 0 0-1.371 0L5.253 3.736 1.659.272a1 1 0 0 0-1.371 0A.93.93 0 0 0 0 .932c0 .246.1.48.288.662l4.28 4.125a.99.99 0 0 0 1.37.01z\"\n    })),\n    onClick: handleCollapseClick\n  }, expanded ? 'Less' : 'More', \" options\")) : null)), React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-overlay\",\n    onMouseDown: handleClose\n  })), portal);\n};","map":null,"metadata":{},"sourceType":"module"}