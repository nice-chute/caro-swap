{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CombineVault = exports.CombineVaultArgs = void 0;\n\nvar mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nvar spl_token_1 = require(\"@solana/spl-token\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar VaultProgram_1 = require(\"../VaultProgram\");\n\nvar VaultProgram_2 = require(\"../VaultProgram\");\n\nvar CombineVaultArgs = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat) {\n  _inherits(CombineVaultArgs, _mpl_core_1$Borsh$Dat);\n\n  var _super = _createSuper(CombineVaultArgs);\n\n  function CombineVaultArgs() {\n    var _this;\n\n    _classCallCheck(this, CombineVaultArgs);\n\n    _this = _super.apply(this, arguments);\n    _this.instruction = VaultProgram_1.VaultInstructions.CombineVault;\n    return _this;\n  }\n\n  return _createClass(CombineVaultArgs);\n}(mpl_core_1.Borsh.Data);\n\nexports.CombineVaultArgs = CombineVaultArgs;\n_a = CombineVaultArgs;\nCombineVaultArgs.SCHEMA = _a.struct([['instruction', 'u8']]);\n\nvar CombineVault = /*#__PURE__*/function (_mpl_core_1$Transacti) {\n  _inherits(CombineVault, _mpl_core_1$Transacti);\n\n  var _super2 = _createSuper(CombineVault);\n\n  function CombineVault(options, params) {\n    var _this2;\n\n    _classCallCheck(this, CombineVault);\n\n    _this2 = _super2.call(this, options);\n    var vault = params.vault,\n        vaultAuthority = params.vaultAuthority,\n        fractionMint = params.fractionMint,\n        fractionTreasury = params.fractionTreasury,\n        outstandingShareTokenAccount = params.outstandingShareTokenAccount,\n        payingTokenAccount = params.payingTokenAccount,\n        redeemTreasury = params.redeemTreasury,\n        newVaultAuthority = params.newVaultAuthority,\n        transferAuthority = params.transferAuthority,\n        externalPriceAccount = params.externalPriceAccount,\n        burnAuthority = params.burnAuthority;\n    var data = CombineVaultArgs.serialize();\n\n    _this2.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: vault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: outstandingShareTokenAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: payingTokenAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionMint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: fractionTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: redeemTreasury,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: newVaultAuthority || vaultAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: vaultAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: transferAuthority,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: burnAuthority,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: externalPriceAccount,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: VaultProgram_2.VaultProgram.PUBKEY,\n      data: data\n    }));\n\n    return _this2;\n  }\n\n  return _createClass(CombineVault);\n}(mpl_core_1.Transaction);\n\nexports.CombineVault = CombineVault;","map":null,"metadata":{},"sourceType":"script"}