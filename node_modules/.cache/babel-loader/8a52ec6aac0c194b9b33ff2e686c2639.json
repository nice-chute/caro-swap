{"ast":null,"code":"import _regeneratorRuntime from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/daniel/dev/caroline-swap/app/src/App.js\",\n    _this4 = this;\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Connection, PublicKey, Keypair, clusterApiUrl, LAMPORTS_PER_SOL, SYSVAR_RENT_PUBKEY } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID, NATIVE_MINT } from \"@solana/spl-token\";\nimport { Program, Provider, web3 } from '@project-serum/anchor';\nimport idl from './idl.json';\nimport * as anchor from \"@project-serum/anchor\"; // Wallet adapter\n\nimport { getPhantomWallet } from '@solana/wallet-adapter-wallets';\nimport { useWallet, WalletProvider, ConnectionProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { programs } from '@metaplex/js'; // import fetch from 'node-fetch';\n// Bootstrap components\n\nimport Container from 'react-bootstrap/Container';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport axios from 'axios'; // CSS\n\nimport './App.css';\nimport { token } from '@project-serum/anchor/dist/cjs/utils';\nimport { InputGroup } from 'react-bootstrap';\n\nrequire('@solana/wallet-adapter-react-ui/styles.css'); // http\n\n\nvar Metadata = programs.metadata.Metadata; // Globals\n\nvar market = new PublicKey(\"EQkCga3Rtkt4AFhJToY6jsstGzRHkDp6asgLxu6srkJc\");\nvar wallets = [getPhantomWallet()]; //const network = clusterApiUrl('devnet');\n\nvar network = \"https://ssc-dao.genesysgo.net/\";\nvar opts = {\n  preflightCommitment: \"processed\"\n};\nvar programID = new PublicKey(idl.metadata.address);\nvar SystemProgram = web3.SystemProgram;\n\nfunction App() {\n  // Wallet NFTs\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      walletNfts = _useState2[0],\n      setWalletNfts = _useState2[1]; // Listings on market\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listings = _useState4[0],\n      setListings = _useState4[1]; // Wallet connected\n\n\n  var wallet = useWallet(); // Connection to Solana rpc\n\n  function getProvider() {\n    return _getProvider.apply(this, arguments);\n  } // App render\n\n\n  function _getProvider() {\n    _getProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var connection, provider;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              connection = new Connection(network, opts.preflightCommitment);\n              provider = new Provider(connection, wallet, opts.preflightCommitment);\n              return _context8.abrupt(\"return\", provider);\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _getProvider.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!wallet || !wallet.publicKey)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              // Wallet NFTs\n              fetchWalletNFTs().catch(console.error); // Listings\n\n              fetchListings().catch(console.error);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [wallet, fetchWalletNFTs, fetchListings]); // Fetch wallet's nfts\n\n  var fetchWalletNFTs = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var provider, tokenAccounts, wallet_nfts, i, tokenAccountMint, mintInfo, tokenBalance, mintSupply, pda, metadata, name, uri, _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getProvider();\n\n          case 2:\n            provider = _context2.sent;\n            _context2.next = 5;\n            return provider.connection.getParsedTokenAccountsByOwner(provider.wallet.publicKey, {\n              programId: TOKEN_PROGRAM_ID\n            });\n\n          case 5:\n            tokenAccounts = _context2.sent;\n            wallet_nfts = [];\n            i = 0;\n\n          case 8:\n            if (!(i < tokenAccounts.value.length)) {\n              _context2.next = 38;\n              break;\n            }\n\n            tokenAccountMint = new PublicKey(tokenAccounts.value[i].account.data.parsed.info.mint);\n            _context2.next = 12;\n            return provider.connection.getParsedAccountInfo(tokenAccountMint);\n\n          case 12:\n            mintInfo = _context2.sent;\n            tokenBalance = parseInt(tokenAccounts.value[i].account.data.parsed.info.tokenAmount.amount);\n            mintSupply = parseInt(mintInfo.value.data.parsed.info.supply); // NFT\n\n            if (!(mintSupply === 1 && tokenBalance == 1)) {\n              _context2.next = 35;\n              break;\n            }\n\n            _context2.prev = 16;\n            _context2.next = 19;\n            return Metadata.getPDA(tokenAccountMint);\n\n          case 19:\n            pda = _context2.sent;\n            _context2.next = 22;\n            return Metadata.load(provider.connection, pda);\n\n          case 22:\n            metadata = _context2.sent;\n            name = metadata.data.data.name;\n            uri = metadata.data.data.uri;\n            _context2.next = 27;\n            return axios.get(uri);\n\n          case 27:\n            _yield$axios$get = _context2.sent;\n            data = _yield$axios$get.data;\n            // Todo: handle non metaplex nfts\n            wallet_nfts.push(data);\n            _context2.next = 35;\n            break;\n\n          case 32:\n            _context2.prev = 32;\n            _context2.t0 = _context2[\"catch\"](16);\n            console.log(_context2.t0);\n\n          case 35:\n            i++;\n            _context2.next = 8;\n            break;\n\n          case 38:\n            setWalletNfts(wallet_nfts);\n\n          case 39:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[16, 32]]);\n  })));\n  var fetchListings = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var provider, program, listings, user_listings, accounts, i, listing;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getProvider();\n\n          case 2:\n            provider = _context3.sent;\n            program = new Program(idl, programID, provider);\n            listings = [];\n            user_listings = [];\n            _context3.next = 8;\n            return provider.connection.getProgramAccounts(program.programId);\n\n          case 8:\n            accounts = _context3.sent;\n            i = 0;\n\n          case 10:\n            if (!(i < accounts.length)) {\n              _context3.next = 24;\n              break;\n            }\n\n            _context3.prev = 11;\n            _context3.next = 14;\n            return program.account.listing.fetch(accounts[i].pubkey);\n\n          case 14:\n            listing = _context3.sent;\n            listings.push(listing);\n\n            if (listing.seller.equals(provider.wallet.publicKey)) {\n              user_listings.push(listing);\n            }\n\n            _context3.next = 21;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t0 = _context3[\"catch\"](11);\n\n          case 21:\n            i++;\n            _context3.next = 10;\n            break;\n\n          case 24:\n            console.log(\"active listings:\", listings);\n            setListings({\n              'activeListings': listings,\n              'userListings': user_listings\n            });\n\n          case 26:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[11, 19]]);\n  })));\n\n  function NFTCard(_ref4) {\n    var props = _ref4.props;\n\n    // Listing price\n    var _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        listingPrice = _useState6[0],\n        setListingPrice = _useState6[1];\n\n    function handleClick() {\n      return _handleClick.apply(this, arguments);\n    }\n\n    function _handleClick() {\n      _handleClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var price, provider, program, nftAccount, data, nftMint, _yield$PublicKey$find, _yield$PublicKey$find2, listing, listingBump, _yield$PublicKey$find3, _yield$PublicKey$find4, nftVault, nftVaultBump, tx;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                price = new anchor.BN(listingPrice * LAMPORTS_PER_SOL); // Program\n\n                _context4.next = 4;\n                return getProvider();\n\n              case 4:\n                provider = _context4.sent;\n                program = new Program(idl, programID, provider); // Nft account info for the card\n\n                nftAccount = props.pubkey;\n                data = props.account.data.parsed.info;\n                nftMint = new PublicKey(data.mint); // Listing PDA\n\n                _context4.next = 11;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")), market.toBuffer(), nftMint.toBuffer(), provider.wallet.publicKey.toBuffer()], program.programId);\n\n              case 11:\n                _yield$PublicKey$find = _context4.sent;\n                _yield$PublicKey$find2 = _slicedToArray(_yield$PublicKey$find, 2);\n                listing = _yield$PublicKey$find2[0];\n                listingBump = _yield$PublicKey$find2[1];\n                _context4.next = 17;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")), nftMint.toBuffer()], program.programId);\n\n              case 17:\n                _yield$PublicKey$find3 = _context4.sent;\n                _yield$PublicKey$find4 = _slicedToArray(_yield$PublicKey$find3, 2);\n                nftVault = _yield$PublicKey$find4[0];\n                nftVaultBump = _yield$PublicKey$find4[1];\n                // Logging\n                console.log(\"program id:\", program.programId.toBase58());\n                console.log(\"nft vault:\", nftVault.toBase58());\n                console.log(\"mint:\", nftMint.toBase58());\n                console.log(\"pubkey:\", nftAccount.toBase58());\n                console.log(\"listing:\", listing.toBase58()); // Create listing\n\n                _context4.next = 28;\n                return program.rpc.createListing(price, listingBump, nftVaultBump, {\n                  accounts: {\n                    signer: provider.wallet.publicKey,\n                    listing: listing,\n                    market: market,\n                    nftVault: nftVault,\n                    nftAccount: nftAccount,\n                    nftMint: nftMint,\n                    systemProgram: SystemProgram.programId,\n                    tokenProgram: TOKEN_PROGRAM_ID,\n                    rent: SYSVAR_RENT_PUBKEY\n                  },\n                  signers: []\n                });\n\n              case 28:\n                tx = _context4.sent;\n                console.log(tx);\n                _context4.next = 35;\n                break;\n\n              case 32:\n                _context4.prev = 32;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 35:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 32]]);\n      }));\n      return _handleClick.apply(this, arguments);\n    }\n\n    if (Object.keys(props).length === 0 && props.constructor === Object) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"visually-hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, \"Loading...\"));\n    } else {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        className: \"nft\",\n        src: \"https://cdn.solanamonkey.business/gen2/2986.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"card-body justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        min: \"0\",\n        placeholder: \"SOL\",\n        value: listingPrice,\n        onChange: function onChange(event) {\n          setListingPrice(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        type: \"button\",\n        onClick: function onClick(e) {\n          return handleClick();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, \"List\")))));\n    }\n  }\n\n  function ListingCard(_ref5) {\n    var props = _ref5.props;\n\n    // Buy nft\n    function handleClick() {\n      return _handleClick2.apply(this, arguments);\n    }\n\n    function _handleClick2() {\n      _handleClick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var provider, program, nftMint, _market, buyerNFTAcc, _yield$PublicKey$find5, _yield$PublicKey$find6, listing, listingBump, _yield$PublicKey$find7, _yield$PublicKey$find8, marketVault, marketVaultBump, _yield$PublicKey$find9, _yield$PublicKey$find10, nftVault, nftVaultBump, tx;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return getProvider();\n\n              case 3:\n                provider = _context5.sent;\n                program = new Program(idl, programID, provider); // Mint + market\n\n                nftMint = new PublicKey(props.nftMint);\n                _market = new PublicKey(props.market);\n                buyerNFTAcc = Keypair.generate(); // Listing PDA\n\n                _context5.next = 10;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")), _market.toBuffer(), props.nftMint.toBuffer(), props.seller.toBuffer()], program.programId);\n\n              case 10:\n                _yield$PublicKey$find5 = _context5.sent;\n                _yield$PublicKey$find6 = _slicedToArray(_yield$PublicKey$find5, 2);\n                listing = _yield$PublicKey$find6[0];\n                listingBump = _yield$PublicKey$find6[1];\n                _context5.next = 16;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")), _market.toBuffer(), NATIVE_MINT.toBuffer()], program.programId);\n\n              case 16:\n                _yield$PublicKey$find7 = _context5.sent;\n                _yield$PublicKey$find8 = _slicedToArray(_yield$PublicKey$find7, 2);\n                marketVault = _yield$PublicKey$find8[0];\n                marketVaultBump = _yield$PublicKey$find8[1];\n                _context5.next = 22;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")), nftMint.toBuffer()], program.programId);\n\n              case 22:\n                _yield$PublicKey$find9 = _context5.sent;\n                _yield$PublicKey$find10 = _slicedToArray(_yield$PublicKey$find9, 2);\n                nftVault = _yield$PublicKey$find10[0];\n                nftVaultBump = _yield$PublicKey$find10[1];\n                _context5.next = 28;\n                return program.rpc.buy(listingBump, marketVaultBump, nftVaultBump, {\n                  accounts: {\n                    signer: provider.wallet.publicKey,\n                    signerNftAcc: buyerNFTAcc.publicKey,\n                    listing: listing,\n                    seller: props.seller,\n                    market: _market,\n                    marketVault: marketVault,\n                    nftVault: nftVault,\n                    nftMint: nftMint,\n                    nativeMint: NATIVE_MINT,\n                    systemProgram: SystemProgram.programId,\n                    tokenProgram: TOKEN_PROGRAM_ID,\n                    rent: SYSVAR_RENT_PUBKEY\n                  },\n                  signers: [buyerNFTAcc]\n                });\n\n              case 28:\n                tx = _context5.sent;\n                console.log(tx);\n                _context5.next = 35;\n                break;\n\n              case 32:\n                _context5.prev = 32;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 35:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 32]]);\n      }));\n      return _handleClick2.apply(this, arguments);\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nft-price inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: \"../sol.svg\",\n      width: \"15\",\n      height: \"15\",\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }\n    }), ' ', props.ask.toNumber() / LAMPORTS_PER_SOL), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      className: \"nft\",\n      src: \"https://www.arweave.net/N_gPjI27LW-5z-HAVOCYPUOl6viCN_mOA7MxESKDDwU?ext=png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"card-body justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submit-btn\",\n      onClick: function onClick() {\n        return handleClick();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }, \"Buy\")));\n  }\n\n  function UserListingCard(_ref6) {\n    var props = _ref6.props;\n\n    var _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        listingPrice = _useState8[0],\n        setListingPrice = _useState8[1];\n\n    function handleClose() {\n      return _handleClose.apply(this, arguments);\n    }\n\n    function _handleClose() {\n      _handleClose = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var provider, program, sellerNFTAcc, nftMint, _market2, _yield$PublicKey$find11, _yield$PublicKey$find12, listing, listingBump, _yield$PublicKey$find13, _yield$PublicKey$find14, nftVault, nftVaultBump, tx;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return getProvider();\n\n              case 3:\n                provider = _context6.sent;\n                program = new Program(idl, programID, provider);\n                sellerNFTAcc = Keypair.generate(); // Mint + market\n\n                nftMint = new PublicKey(props.nftMint);\n                _market2 = new PublicKey(props.market); // Listing PDA\n\n                _context6.next = 10;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")), _market2.toBuffer(), nftMint.toBuffer(), provider.wallet.publicKey.toBuffer()], program.programId);\n\n              case 10:\n                _yield$PublicKey$find11 = _context6.sent;\n                _yield$PublicKey$find12 = _slicedToArray(_yield$PublicKey$find11, 2);\n                listing = _yield$PublicKey$find12[0];\n                listingBump = _yield$PublicKey$find12[1];\n                _context6.next = 16;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")), nftMint.toBuffer()], program.programId);\n\n              case 16:\n                _yield$PublicKey$find13 = _context6.sent;\n                _yield$PublicKey$find14 = _slicedToArray(_yield$PublicKey$find13, 2);\n                nftVault = _yield$PublicKey$find14[0];\n                nftVaultBump = _yield$PublicKey$find14[1];\n                _context6.next = 22;\n                return program.rpc.closeListing(listingBump, nftVaultBump, {\n                  accounts: {\n                    signer: provider.wallet.publicKey,\n                    signerNftAcc: sellerNFTAcc.publicKey,\n                    nftVault: nftVault,\n                    listing: listing,\n                    market: _market2,\n                    nftMint: nftMint,\n                    systemProgram: SystemProgram.programId,\n                    tokenProgram: TOKEN_PROGRAM_ID,\n                    rent: SYSVAR_RENT_PUBKEY\n                  },\n                  signers: [sellerNFTAcc]\n                });\n\n              case 22:\n                tx = _context6.sent;\n                console.log(tx);\n                _context6.next = 29;\n                break;\n\n              case 26:\n                _context6.prev = 26;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.log(_context6.t0);\n\n              case 29:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 26]]);\n      }));\n      return _handleClose.apply(this, arguments);\n    }\n\n    function handleUpdate() {\n      return _handleUpdate.apply(this, arguments);\n    }\n\n    function _handleUpdate() {\n      _handleUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var price, provider, program, nftMint, _market3, _yield$PublicKey$find15, _yield$PublicKey$find16, listing, listingBump, tx;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                price = new anchor.BN(listingPrice * LAMPORTS_PER_SOL); // Program\n\n                _context7.next = 4;\n                return getProvider();\n\n              case 4:\n                provider = _context7.sent;\n                program = new Program(idl, programID, provider); // Mint + market\n\n                nftMint = new PublicKey(props.nftMint);\n                _market3 = new PublicKey(props.market); // Listing PDA\n\n                _context7.next = 10;\n                return PublicKey.findProgramAddress([Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")), _market3.toBuffer(), nftMint.toBuffer(), provider.wallet.publicKey.toBuffer()], program.programId);\n\n              case 10:\n                _yield$PublicKey$find15 = _context7.sent;\n                _yield$PublicKey$find16 = _slicedToArray(_yield$PublicKey$find15, 2);\n                listing = _yield$PublicKey$find16[0];\n                listingBump = _yield$PublicKey$find16[1];\n                _context7.next = 16;\n                return program.rpc.ask(price, listingBump, {\n                  accounts: {\n                    signer: provider.wallet.publicKey,\n                    listing: listing,\n                    market: _market3,\n                    nftMint: nftMint,\n                    systemProgram: SystemProgram.programId,\n                    tokenProgram: TOKEN_PROGRAM_ID\n                  },\n                  signers: []\n                });\n\n              case 16:\n                tx = _context7.sent;\n                console.log(tx);\n                _context7.next = 23;\n                break;\n\n              case 20:\n                _context7.prev = 20;\n                _context7.t0 = _context7[\"catch\"](0);\n                console.log(_context7.t0);\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 20]]);\n      }));\n      return _handleUpdate.apply(this, arguments);\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nft-price inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: \"../sol.svg\",\n      width: \"15\",\n      height: \"15\",\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }\n    }), ' ', props.ask.toNumber() / LAMPORTS_PER_SOL), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      className: \"nft\",\n      src: \"https://cdn.solanamonkey.business/gen2/2986.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"card-body justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      min: \"0\",\n      placeholder: \"SOL\",\n      value: listingPrice,\n      onChange: function onChange(event) {\n        setListingPrice(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary\",\n      type: \"button\",\n      onClick: function onClick(e) {\n        return handleUpdate();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 15\n      }\n    }, \"Update\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"close-btn\",\n      type: \"button\",\n      onClick: function onClick(e) {\n        return handleClose();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }\n    }, \"Close listing\")));\n  }\n\n  function ActiveListings(_ref7) {\n    var _this = this;\n\n    var props = _ref7.props;\n    console.log(\"props:\", props);\n\n    if (props.length === 0) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"visually-hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }\n      }, \"Loading...\"));\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"card-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        xs: \"auto\",\n        md: \"auto\",\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }\n      }, props.activeListings.map(function (listing, idx) {\n        return /*#__PURE__*/React.createElement(Col, {\n          className: \"col top-buffer\",\n          key: idx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(ListingCard, {\n          props: listing,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }\n        }));\n      })));\n    }\n  }\n\n  function UserListings(_ref8) {\n    var _this2 = this;\n\n    var props = _ref8.props;\n\n    if (props.length === 0) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"visually-hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }\n      }, \"Loading...\"));\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"card-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        xs: \"auto\",\n        md: \"auto\",\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }\n      }, props.userListings.map(function (listing, idx) {\n        return /*#__PURE__*/React.createElement(Col, {\n          className: \"col top-buffer\",\n          key: idx,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(UserListingCard, {\n          props: listing,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }\n        }));\n      })));\n    }\n  }\n\n  function UserNFTs(_ref9) {\n    var _this3 = this;\n\n    var props = _ref9.props;\n    console.log(\"user nft props:\", props);\n\n    if (Object.keys(props).length === 0 && props.constructor === Object) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"visually-hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }\n      }, \"Loading...\"));\n    } else {\n      return null;\n      var tokenAccounts = props.nftTokenAccounts;\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"card-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        xs: \"auto\",\n        md: \"auto\",\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }\n      }, tokenAccounts.map(function (acc, idx) {\n        return /*#__PURE__*/React.createElement(Col, {\n          className: \"col top-buffer\",\n          key: idx,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(NFTCard, {\n          props: acc,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 17\n          }\n        }));\n      })));\n    }\n  }\n\n  function Home() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActiveListings, {\n      props: listings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function Listings() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserListings, {\n      props: listings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function Wallet() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserNFTs, {\n      props: walletNfts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!wallet.connected) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WalletMultiButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"container-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      sticky: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"nav-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: \"../small.png\",\n      height: \"75\",\n      className: \"logo d-inline-block align-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 15\n      }\n    }), ' ', /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: \"../logo.png\",\n      width: \"190\",\n      height: \"25\",\n      className: \"logo-banner d-inline-block align-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 15\n      }\n    }), ' '), /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/listings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 15\n      }\n    }, \"My Listings\"), /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 15\n      }\n    }, \"Wallet\")), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://discord.gg/NJ8cvqPQ\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: \"../discord1.svg\",\n      width: \"35\",\n      height: \"35\",\n      className: \"logo-banner d-inline-block align-middle\",\n      href: \"https://discord.gg/NJ8cvqPQ\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 15\n      }\n    }), ' '))), /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/React.createElement(Home, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 36\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/wallet\",\n      element: /*#__PURE__*/React.createElement(Wallet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 42\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/listings\",\n      element: /*#__PURE__*/React.createElement(Listings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 44\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\nvar AppWithProvider = function AppWithProvider() {\n  return /*#__PURE__*/React.createElement(ConnectionProvider, {\n    endpoint: network,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(WalletProvider, {\n    wallets: wallets,\n    autoConnect: true,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WalletModalProvider, {\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default AppWithProvider;","map":{"version":3,"sources":["/Users/daniel/dev/caroline-swap/app/src/App.js"],"names":["React","useState","useEffect","useCallback","Connection","PublicKey","Keypair","clusterApiUrl","LAMPORTS_PER_SOL","SYSVAR_RENT_PUBKEY","TOKEN_PROGRAM_ID","NATIVE_MINT","Program","Provider","web3","idl","anchor","getPhantomWallet","useWallet","WalletProvider","ConnectionProvider","WalletModalProvider","WalletMultiButton","programs","Container","BrowserRouter","Router","Routes","Route","Card","Button","Row","Col","ListGroup","Form","Spinner","Navbar","Nav","axios","token","InputGroup","require","Metadata","metadata","market","wallets","network","opts","preflightCommitment","programID","address","SystemProgram","App","walletNfts","setWalletNfts","listings","setListings","wallet","getProvider","connection","provider","publicKey","fetchWalletNFTs","catch","console","error","fetchListings","getParsedTokenAccountsByOwner","programId","tokenAccounts","wallet_nfts","i","value","length","tokenAccountMint","account","data","parsed","info","mint","getParsedAccountInfo","mintInfo","tokenBalance","parseInt","tokenAmount","amount","mintSupply","supply","getPDA","pda","load","name","uri","get","push","log","program","user_listings","getProgramAccounts","accounts","listing","fetch","pubkey","seller","equals","NFTCard","props","listingPrice","setListingPrice","handleClick","price","BN","nftAccount","nftMint","findProgramAddress","Buffer","from","utils","bytes","utf8","encode","toBuffer","listingBump","nftVault","nftVaultBump","toBase58","rpc","createListing","signer","systemProgram","tokenProgram","rent","signers","tx","Object","keys","constructor","event","target","e","ListingCard","buyerNFTAcc","generate","marketVault","marketVaultBump","buy","signerNftAcc","nativeMint","ask","toNumber","UserListingCard","handleClose","sellerNFTAcc","closeListing","handleUpdate","ActiveListings","activeListings","map","idx","UserListings","userListings","UserNFTs","nftTokenAccounts","acc","Home","Listings","Wallet","connected","display","justifyContent","marginTop","AppWithProvider"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Connection, PublicKey, Keypair, clusterApiUrl, LAMPORTS_PER_SOL, SYSVAR_RENT_PUBKEY } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID, NATIVE_MINT } from \"@solana/spl-token\";\nimport {\n  Program, Provider, web3\n} from '@project-serum/anchor';\nimport idl from './idl.json';\nimport * as anchor from \"@project-serum/anchor\";\n\n// Wallet adapter\nimport { getPhantomWallet } from '@solana/wallet-adapter-wallets';\nimport { useWallet, WalletProvider, ConnectionProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\n\nimport { programs } from '@metaplex/js';\n// import fetch from 'node-fetch';\n\n\n// Bootstrap components\nimport Container from 'react-bootstrap/Container';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport axios from 'axios';\n\n// CSS\nimport './App.css';\nimport { token } from '@project-serum/anchor/dist/cjs/utils';\nimport { InputGroup } from 'react-bootstrap';\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\n// http\nconst { metadata: { Metadata } } = programs;\n\n\n\n// Globals\nconst market = new PublicKey(\"EQkCga3Rtkt4AFhJToY6jsstGzRHkDp6asgLxu6srkJc\");\nconst wallets = [getPhantomWallet()]\n//const network = clusterApiUrl('devnet');\nconst network = \"https://ssc-dao.genesysgo.net/\"\nconst opts = {\n  preflightCommitment: \"processed\"\n}\nconst programID = new PublicKey(idl.metadata.address);\nconst { SystemProgram } = web3;\n\nfunction App() {\n  // Wallet NFTs\n  const [walletNfts, setWalletNfts] = useState([]);\n  // Listings on market\n  const [listings, setListings] = useState([]);\n  // Wallet connected\n  const wallet = useWallet()\n  // Connection to Solana rpc\n  async function getProvider() {\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new Provider(\n      connection, wallet, opts.preflightCommitment,\n    );\n    return provider;\n  }\n  // App render\n  useEffect(() => {\n    (async () => {\n      if (\n        !wallet ||\n        !wallet.publicKey\n      ) {\n        return;\n      }\n      // Wallet NFTs\n      fetchWalletNFTs().catch(console.error);\n      // Listings\n      fetchListings().catch(console.error);\n    })();\n  }, [wallet, fetchWalletNFTs, fetchListings]);\n\n  // Fetch wallet's nfts\n  const fetchWalletNFTs = useCallback(async () => {\n    const provider = await getProvider();\n    // TODO: This is slow\n    let tokenAccounts = await provider.connection.getParsedTokenAccountsByOwner(provider.wallet.publicKey, { programId: TOKEN_PROGRAM_ID });\n    let wallet_nfts = []\n    for (let i = 0; i < tokenAccounts.value.length; i++) {\n      let tokenAccountMint = new PublicKey(tokenAccounts.value[i].account.data.parsed.info.mint);\n      let mintInfo = await provider.connection.getParsedAccountInfo(tokenAccountMint)\n      let tokenBalance = parseInt(tokenAccounts.value[i].account.data.parsed.info.tokenAmount.amount);\n      let mintSupply = parseInt(mintInfo.value.data.parsed.info.supply);\n      // NFT\n      if (mintSupply === 1 && tokenBalance == 1) {\n        // Metaplex data\n        try {\n          const pda = await Metadata.getPDA(tokenAccountMint);\n          const metadata = await Metadata.load(provider.connection, pda);\n          let name = metadata.data.data.name\n          let uri = metadata.data.data.uri\n          const { data } = await axios.get(uri);\n          // Todo: handle non metaplex nfts\n          wallet_nfts.push(data)\n        }\n        catch (err) {\n          console.log(err)\n        }\n      }\n    }\n    setWalletNfts(wallet_nfts)\n  });\n\n  const fetchListings = useCallback(async () => {\n    const provider = await getProvider();\n    const program = new Program(idl, programID, provider);\n    let listings = []\n    let user_listings = []\n    let accounts = await provider.connection.getProgramAccounts(program.programId);\n    for (let i = 0; i < accounts.length; i++) {\n      // Try to fetch the listing account, throws error if its not a listing\n      try {\n        let listing = await program.account.listing.fetch(accounts[i].pubkey);\n        listings.push(listing)\n        if (listing.seller.equals(provider.wallet.publicKey)) {\n          user_listings.push(listing)\n        }\n      }\n      catch (err) {\n      }\n    }\n    console.log(\"active listings:\", listings)\n    setListings({ 'activeListings': listings, 'userListings': user_listings });\n  });\n\n  function NFTCard({ props }) {\n    // Listing price\n    const [listingPrice, setListingPrice] = useState(\"\");\n    async function handleClick() {\n      try {\n        let price = new anchor.BN(listingPrice * LAMPORTS_PER_SOL)\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n\n        // Nft account info for the card\n        let nftAccount = props.pubkey;\n        let data = props.account.data.parsed.info;\n        let nftMint = new PublicKey(data.mint);\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            nftMint.toBuffer(),\n            provider.wallet.publicKey.toBuffer(),\n          ],\n          program.programId\n        );\n        // NFT vault PDA\n        let [nftVault, nftVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            nftMint.toBuffer(),\n          ],\n          program.programId\n        );\n        // Logging\n        console.log(\"program id:\", program.programId.toBase58())\n        console.log(\"nft vault:\", nftVault.toBase58())\n        console.log(\"mint:\", nftMint.toBase58())\n        console.log(\"pubkey:\", nftAccount.toBase58())\n        console.log(\"listing:\", listing.toBase58())\n        // Create listing\n        const tx = await program.rpc.createListing(\n          price,\n          listingBump,\n          nftVaultBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              listing: listing,\n              market: market,\n              nftVault: nftVault,\n              nftAccount: nftAccount,\n              nftMint: nftMint,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY\n            },\n            signers: []\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n    }\n\n    if (Object.keys(props).length === 0 && props.constructor === Object) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return (\n        <Card className=\"card\">\n          <Container>\n            <Card.Img className=\"nft\" src=\"https://cdn.solanamonkey.business/gen2/2986.png\" />\n          </Container>\n          <Card.Body className=\"card-body justify-content-center\">\n            <div className=\"input-group mb-3\">\n              <input type=\"text\" className=\"form-control\" min=\"0\" placeholder=\"SOL\" value={listingPrice} onChange={event => {\n                setListingPrice(event.target.value);\n              }}\n              ></input>\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={(e) => handleClick()}>List</button>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      );\n    }\n  }\n\n  function ListingCard({ props }) {\n    // Buy nft\n    async function handleClick() {\n      try {\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n        // Mint + market\n        let nftMint = new PublicKey(props.nftMint);\n        let market = new PublicKey(props.market)\n        let buyerNFTAcc = Keypair.generate();\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            props.nftMint.toBuffer(),\n            props.seller.toBuffer(),\n          ],\n          program.programId\n        );\n        // Market vault PDA\n        let [marketVault, marketVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            market.toBuffer(),\n            NATIVE_MINT.toBuffer(),\n          ],\n          program.programId\n        );\n        // NFT vault PDA\n        let [nftVault, nftVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            nftMint.toBuffer(),\n          ],\n          program.programId\n        );\n        // Buy nft\n        const tx = await program.rpc.buy(\n          listingBump,\n          marketVaultBump,\n          nftVaultBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              signerNftAcc: buyerNFTAcc.publicKey,\n              listing: listing,\n              seller: props.seller,\n              market: market,\n              marketVault: marketVault,\n              nftVault: nftVault,\n              nftMint: nftMint,\n              nativeMint: NATIVE_MINT,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [buyerNFTAcc]\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n    }\n\n    return (\n      <Card className=\"card\">\n        <div className=\"nft-price inline\">\n          <img\n            alt=\"\"\n            src=\"../sol.svg\"\n            width=\"15\"\n            height=\"15\"\n            className=\"d-inline-block\"\n          />{' '}\n          {props.ask.toNumber() / LAMPORTS_PER_SOL}\n        </div>\n        <Container>\n          <Card.Img className=\"nft\" src=\"https://www.arweave.net/N_gPjI27LW-5z-HAVOCYPUOl6viCN_mOA7MxESKDDwU?ext=png\" />\n        </Container>\n        <Card.Body className=\"card-body justify-content-center\">\n          <Button className=\"submit-btn\" onClick={() => handleClick()}>Buy</Button>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  function UserListingCard({ props }) {\n    const [listingPrice, setListingPrice] = useState(\"\");\n    async function handleClose() {\n      try {\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n\n        let sellerNFTAcc = Keypair.generate();\n\n        // Mint + market\n        let nftMint = new PublicKey(props.nftMint);\n        let market = new PublicKey(props.market)\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            nftMint.toBuffer(),\n            provider.wallet.publicKey.toBuffer(),\n          ],\n          program.programId\n        );\n        // NFT vault PDA\n        let [nftVault, nftVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            nftMint.toBuffer(),\n          ],\n          program.programId\n        );\n        // Close listing\n        const tx = await program.rpc.closeListing(\n          listingBump,\n          nftVaultBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              signerNftAcc: sellerNFTAcc.publicKey,\n              nftVault: nftVault,\n              listing: listing,\n              market: market,\n              nftMint: nftMint,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY\n            },\n            signers: [sellerNFTAcc]\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n\n    }\n    async function handleUpdate() {\n      try {\n        let price = new anchor.BN(listingPrice * LAMPORTS_PER_SOL)\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n\n        // Mint + market\n        let nftMint = new PublicKey(props.nftMint);\n        let market = new PublicKey(props.market)\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            nftMint.toBuffer(),\n            provider.wallet.publicKey.toBuffer(),\n          ],\n          program.programId\n        );\n        // Update listing ask\n        const tx = await program.rpc.ask(\n          price,\n          listingBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              listing: listing,\n              market: market,\n              nftMint: nftMint,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n            },\n            signers: []\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n    }\n\n    return (\n      <Card className=\"card\">\n        <div className=\"nft-price inline\">\n          <img\n            alt=\"\"\n            src=\"../sol.svg\"\n            width=\"15\"\n            height=\"15\"\n            className=\"d-inline-block\"\n          />{' '}\n          {props.ask.toNumber() / LAMPORTS_PER_SOL}\n        </div>\n        <Container>\n          <Card.Img className=\"nft\" src=\"https://cdn.solanamonkey.business/gen2/2986.png\" />\n        </Container>\n        <Card.Body className=\"card-body justify-content-center\">\n          <div className=\"input-group mb-3\">\n            <input type=\"text\" className=\"form-control\" min=\"0\" placeholder=\"SOL\" value={listingPrice} onChange={event => {\n              setListingPrice(event.target.value);\n            }}\n            ></input>\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={(e) => handleUpdate()}>Update</button>\n            </div>\n          </div>\n          <button className=\"close-btn\" type=\"button\" onClick={(e) => handleClose()}>Close listing</button>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  function ActiveListings({ props }) {\n    console.log(\"props:\", props)\n    if (props.length === 0) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return (\n        <Container className=\"card-container\">\n          <Row xs={\"auto\"} md={\"auto\"} className=\"row\">\n            {props.activeListings.map((listing, idx) => (\n              <Col className=\"col top-buffer\" key={idx}>\n                <ListingCard props={listing} />\n              </Col>\n            ))}\n          </Row>\n        </Container >\n      );\n    }\n  }\n\n  function UserListings({ props }) {\n    if (props.length === 0) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return (\n        <Container className=\"card-container\">\n          <Row xs={\"auto\"} md={\"auto\"} className=\"row\">\n            {props.userListings.map((listing, idx) => (\n              <Col className=\"col top-buffer\" key={idx}>\n                <UserListingCard props={listing} />\n              </Col>\n            ))}\n          </Row>\n        </Container >\n      );\n    }\n  }\n\n  function UserNFTs({ props }) {\n    console.log(\"user nft props:\", props)\n    if (Object.keys(props).length === 0 && props.constructor === Object) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return null\n      let tokenAccounts = props.nftTokenAccounts;\n      return (\n        <Container className=\"card-container\">\n          <Row xs={\"auto\"} md={\"auto\"} className=\"row\">\n            {tokenAccounts.map((acc, idx) => (\n              <Col className=\"col top-buffer\" key={idx}>\n                <NFTCard props={acc} />\n              </Col>\n            ))}\n          </Row>\n        </Container >\n      );\n    }\n  }\n\n  function Home() {\n    return (\n      <>\n        <ActiveListings props={listings} />\n      </>\n    );\n  }\n\n  function Listings() {\n    return (\n      <>\n        <UserListings props={listings} />\n      </>\n    );\n  }\n\n  function Wallet() {\n    return (\n      <>\n        <UserNFTs props={walletNfts} />\n      </>\n    );\n  }\n\n  if (!wallet.connected) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '100px' }}>\n        <WalletMultiButton />\n      </div>\n    )\n  } else {\n    return (\n      <Container className=\"container-top\">\n        <Navbar sticky=\"top\">\n          <Container className=\"nav-container\">\n            <Navbar.Brand href=\"/\">\n              <img\n                alt=\"\"\n                src=\"../small.png\"\n                height=\"75\"\n                className=\"logo d-inline-block align-middle\"\n              />{' '}\n              <img\n                alt=\"\"\n                src=\"../logo.png\"\n                width=\"190\"\n                height=\"25\"\n                className=\"logo-banner d-inline-block align-middle\"\n              />{' '}\n            </Navbar.Brand>\n            <Nav className=\"nav-middle\">\n              <Nav.Link href=\"/listings\">My Listings</Nav.Link>\n              <Nav.Link href=\"/wallet\">Wallet</Nav.Link>\n            </Nav>\n            <a href=\"https://discord.gg/NJ8cvqPQ\">\n              <img\n                alt=\"\"\n                src=\"../discord1.svg\"\n                width=\"35\"\n                height=\"35\"\n                className=\"logo-banner d-inline-block align-middle\"\n                href=\"https://discord.gg/NJ8cvqPQ\"\n              />{' '}\n            </a>\n          </Container>\n        </Navbar >\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/wallet\" element={<Wallet />} />\n          <Route path=\"/listings\" element={<Listings />} />\n        </Routes>\n      </Container >\n    );\n  }\n}\n\nconst AppWithProvider = () => (\n  <ConnectionProvider endpoint={network}>\n    <WalletProvider wallets={wallets} autoConnect>\n      <WalletModalProvider>\n        <Router>\n          <App />\n        </Router>\n      </WalletModalProvider>\n    </WalletProvider>\n  </ConnectionProvider>\n)\n\nexport default AppWithProvider;"]},"metadata":{},"sourceType":"module"}