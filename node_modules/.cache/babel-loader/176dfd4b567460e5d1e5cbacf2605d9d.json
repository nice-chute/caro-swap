{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetStore = exports.SetStoreArgs = void 0;\n\nvar mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nvar spl_token_1 = require(\"@solana/spl-token\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar mpl_token_metadata_1 = require(\"@metaplex-foundation/mpl-token-metadata\");\n\nvar mpl_token_vault_1 = require(\"@metaplex-foundation/mpl-token-vault\");\n\nvar mpl_auction_1 = require(\"@metaplex-foundation/mpl-auction\");\n\nvar MetaplexProgram_1 = require(\"../MetaplexProgram\");\n\nvar SetStoreArgs = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat) {\n  _inherits(SetStoreArgs, _mpl_core_1$Borsh$Dat);\n\n  function SetStoreArgs() {\n    var _this;\n\n    _classCallCheck(this, SetStoreArgs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SetStoreArgs).apply(this, arguments));\n    _this.instruction = 8;\n    return _this;\n  }\n\n  return SetStoreArgs;\n}(mpl_core_1.Borsh.Data);\n\nexports.SetStoreArgs = SetStoreArgs;\n_a = SetStoreArgs;\nSetStoreArgs.SCHEMA = _a.struct([['instruction', 'u8'], ['public', 'u8']]);\n\nvar SetStore = /*#__PURE__*/function (_mpl_core_1$Transacti) {\n  _inherits(SetStore, _mpl_core_1$Transacti);\n\n  function SetStore(options, params) {\n    var _this2;\n\n    _classCallCheck(this, SetStore);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SetStore).call(this, options));\n    var feePayer = options.feePayer;\n    var admin = params.admin,\n        store = params.store,\n        isPublic = params.isPublic;\n    var data = SetStoreArgs.serialize({\n      public: isPublic\n    });\n\n    _this2.add(new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: store,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: admin,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mpl_token_vault_1.VaultProgram.PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mpl_token_metadata_1.MetadataProgram.PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mpl_auction_1.AuctionProgram.PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: MetaplexProgram_1.MetaplexProgram.PUBKEY,\n      data: data\n    }));\n\n    return _this2;\n  }\n\n  return SetStore;\n}(mpl_core_1.Transaction);\n\nexports.SetStore = SetStore;","map":null,"metadata":{},"sourceType":"script"}