{"ast":null,"code":"/**\n * Is.js\n *\n * Object type checks.\n */\nvar NAME = Symbol.toStringTag;\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\n\nexport var isURLSearchParameters = function isURLSearchParameters(object) {\n  return typeof object === 'object' && typeof object.append === 'function' && typeof object.delete === 'function' && typeof object.get === 'function' && typeof object.getAll === 'function' && typeof object.has === 'function' && typeof object.set === 'function' && typeof object.sort === 'function' && object[NAME] === 'URLSearchParams';\n};\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\n\nexport var isBlob = function isBlob(object) {\n  return object && typeof object === 'object' && typeof object.arrayBuffer === 'function' && typeof object.type === 'string' && typeof object.stream === 'function' && typeof object.constructor === 'function' && /^(Blob|File)$/.test(object[NAME]);\n};\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\n\nexport var isAbortSignal = function isAbortSignal(object) {\n  return typeof object === 'object' && (object[NAME] === 'AbortSignal' || object[NAME] === 'EventTarget');\n};\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\n\nexport var isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n  var orig = new URL(original).hostname;\n  var dest = new URL(destination).hostname;\n  return orig === dest || orig.endsWith(\".\".concat(dest));\n};","map":null,"metadata":{},"sourceType":"module"}