{"ast":null,"code":"import _defineProperty from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"arrowProps\", \"popper\", \"show\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultProps = {\n  placement: 'right'\n};\nvar Tooltip = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _2 = _ref.show,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  var isRTL = useIsRTL();\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      _ref3 = _slicedToArray(_ref2, 1),\n      primaryPlacement = _ref3[0];\n\n  var bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, \"bs-tooltip-\".concat(bsDirection))\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsx(\"div\", _objectSpread({\n      className: \"tooltip-arrow\"\n    }, arrowProps)), /*#__PURE__*/_jsx(\"div\", {\n      className: \"\".concat(bsPrefix, \"-inner\"),\n      children: children\n    })]\n  }));\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","map":null,"metadata":{},"sourceType":"module"}