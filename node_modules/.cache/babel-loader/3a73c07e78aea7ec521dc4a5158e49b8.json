{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createClass = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/daniel/dev/caroline-swap/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Auction = exports.AuctionData = exports.PriceFloor = exports.BidState = exports.Bid = exports.PriceFloorType = exports.BidStateType = exports.AuctionState = void 0;\n\nvar mpl_core_1 = require(\"@metaplex-foundation/mpl-core\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar buffer_1 = require(\"buffer\");\n\nvar AuctionProgram_1 = require(\"../AuctionProgram\");\n\nvar BidderMetadata_1 = require(\"./BidderMetadata\");\n\nvar BidderPot_1 = require(\"./BidderPot\");\n\nvar AuctionState;\n\n(function (AuctionState) {\n  AuctionState[AuctionState[\"Created\"] = 0] = \"Created\";\n  AuctionState[AuctionState[\"Started\"] = 1] = \"Started\";\n  AuctionState[AuctionState[\"Ended\"] = 2] = \"Ended\";\n})(AuctionState = exports.AuctionState || (exports.AuctionState = {}));\n\nvar BidStateType;\n\n(function (BidStateType) {\n  BidStateType[BidStateType[\"EnglishAuction\"] = 0] = \"EnglishAuction\";\n  BidStateType[BidStateType[\"OpenEdition\"] = 1] = \"OpenEdition\";\n})(BidStateType = exports.BidStateType || (exports.BidStateType = {}));\n\nvar PriceFloorType;\n\n(function (PriceFloorType) {\n  PriceFloorType[PriceFloorType[\"None\"] = 0] = \"None\";\n  PriceFloorType[PriceFloorType[\"Minimum\"] = 1] = \"Minimum\";\n  PriceFloorType[PriceFloorType[\"BlindedPrice\"] = 2] = \"BlindedPrice\";\n})(PriceFloorType = exports.PriceFloorType || (exports.PriceFloorType = {}));\n\nvar Bid = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat) {\n  _inherits(Bid, _mpl_core_1$Borsh$Dat);\n\n  var _super = _createSuper(Bid);\n\n  function Bid() {\n    _classCallCheck(this, Bid);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(Bid);\n}(mpl_core_1.Borsh.Data);\n\nexports.Bid = Bid;\nBid.SCHEMA = Bid.struct([['key', 'pubkeyAsString'], ['amount', 'u64']]);\n\nvar BidState = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat2) {\n  _inherits(BidState, _mpl_core_1$Borsh$Dat2);\n\n  var _super2 = _createSuper(BidState);\n\n  function BidState() {\n    _classCallCheck(this, BidState);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BidState, [{\n    key: \"getWinnerAt\",\n    value: function getWinnerAt(winnerIndex) {\n      var convertedIndex = this.bids.length - winnerIndex - 1;\n\n      if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\n        return this.bids[convertedIndex].key;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getAmountAt\",\n    value: function getAmountAt(winnerIndex) {\n      var convertedIndex = this.bids.length - winnerIndex - 1;\n\n      if (convertedIndex >= 0 && convertedIndex < this.bids.length) {\n        return this.bids[convertedIndex].amount;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getWinnerIndex\",\n    value: function getWinnerIndex(bidder) {\n      if (!this.bids) {\n        return null;\n      }\n\n      var index = this.bids.findIndex(function (b) {\n        return b.key === bidder;\n      });\n\n      if (index !== -1) {\n        var zeroBased = this.bids.length - index - 1;\n        return zeroBased < this.max.toNumber() ? zeroBased : null;\n      }\n\n      return null;\n    }\n  }]);\n\n  return BidState;\n}(mpl_core_1.Borsh.Data);\n\nexports.BidState = BidState;\nBidState.SCHEMA = new Map([].concat(_toConsumableArray(Bid.SCHEMA), _toConsumableArray(BidState.struct([['type', 'u8'], ['bids', [Bid]], ['max', 'u64']]))));\n\nvar PriceFloor = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat3) {\n  _inherits(PriceFloor, _mpl_core_1$Borsh$Dat3);\n\n  var _super3 = _createSuper(PriceFloor);\n\n  function PriceFloor(args) {\n    var _this;\n\n    _classCallCheck(this, PriceFloor);\n\n    _this = _super3.call(this);\n    _this.type = args.type;\n    _this.hash = args.hash || new Uint8Array(32);\n\n    if (_this.type === PriceFloorType.Minimum) {\n      if (args.minPrice) {\n        _this.hash.set(args.minPrice.toArrayLike(buffer_1.Buffer, 'le', 8), 0);\n      } else {\n        _this.minPrice = new bn_js_1.default((args.hash || new Uint8Array(0)).slice(0, 8), 'le');\n      }\n    }\n\n    return _this;\n  }\n\n  return _createClass(PriceFloor);\n}(mpl_core_1.Borsh.Data);\n\nexports.PriceFloor = PriceFloor;\nPriceFloor.SCHEMA = PriceFloor.struct([['type', 'u8'], ['hash', [32]]]);\n\nvar AuctionData = /*#__PURE__*/function (_mpl_core_1$Borsh$Dat4) {\n  _inherits(AuctionData, _mpl_core_1$Borsh$Dat4);\n\n  var _super4 = _createSuper(AuctionData);\n\n  function AuctionData() {\n    _classCallCheck(this, AuctionData);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return _createClass(AuctionData);\n}(mpl_core_1.Borsh.Data);\n\nexports.AuctionData = AuctionData;\nAuctionData.SCHEMA = new Map([].concat(_toConsumableArray(BidState.SCHEMA), _toConsumableArray(PriceFloor.SCHEMA), _toConsumableArray(AuctionData.struct([['authority', 'pubkeyAsString'], ['tokenMint', 'pubkeyAsString'], ['lastBid', {\n  kind: 'option',\n  type: 'u64'\n}], ['endedAt', {\n  kind: 'option',\n  type: 'u64'\n}], ['endAuctionAt', {\n  kind: 'option',\n  type: 'u64'\n}], ['auctionGap', {\n  kind: 'option',\n  type: 'u64'\n}], ['priceFloor', PriceFloor], ['state', 'u8'], ['bidState', BidState]]))));\n\nvar Auction = /*#__PURE__*/function (_mpl_core_1$Account) {\n  _inherits(Auction, _mpl_core_1$Account);\n\n  var _super5 = _createSuper(Auction);\n\n  function Auction(pubkey, info) {\n    var _this2;\n\n    _classCallCheck(this, Auction);\n\n    _this2 = _super5.call(this, pubkey, info);\n\n    if (!_this2.assertOwner(AuctionProgram_1.AuctionProgram.PUBKEY)) {\n      throw (0, mpl_core_1.ERROR_INVALID_OWNER)();\n    }\n\n    _this2.data = AuctionData.deserialize(_this2.info.data);\n    return _this2;\n  }\n\n  _createClass(Auction, [{\n    key: \"getBidderPots\",\n    value: function getBidderPots(connection) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return AuctionProgram_1.AuctionProgram.getProgramAccounts(connection, {\n                  filters: [{\n                    dataSize: BidderPot_1.BidderPot.DATA_SIZE\n                  }, {\n                    memcmp: {\n                      offset: 32 + 32,\n                      bytes: this.pubkey.toBase58()\n                    }\n                  }]\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent.map(function (account) {\n                  return BidderPot_1.BidderPot.from(account);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getBidderMetadata\",\n    value: function getBidderMetadata(connection) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return AuctionProgram_1.AuctionProgram.getProgramAccounts(connection, {\n                  filters: [{\n                    dataSize: BidderMetadata_1.BidderMetadata.DATA_SIZE\n                  }, {\n                    memcmp: {\n                      offset: 32,\n                      bytes: this.pubkey.toBase58()\n                    }\n                  }]\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent.map(function (account) {\n                  return BidderMetadata_1.BidderMetadata.from(account);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }], [{\n    key: \"getPDA\",\n    value: function getPDA(vault) {\n      return AuctionProgram_1.AuctionProgram.findProgramAddress([buffer_1.Buffer.from(AuctionProgram_1.AuctionProgram.PREFIX), AuctionProgram_1.AuctionProgram.PUBKEY.toBuffer(), new web3_js_1.PublicKey(vault).toBuffer()]);\n    }\n  }, {\n    key: \"findMany\",\n    value: function findMany(connection) {\n      var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return AuctionProgram_1.AuctionProgram.getProgramAccounts(connection, {\n                  filters: [filters.authority && {\n                    memcmp: {\n                      offset: 0,\n                      bytes: new web3_js_1.PublicKey(filters.authority).toBase58()\n                    }\n                  }].filter(Boolean)\n                });\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent.map(function (account) {\n                  try {\n                    return Auction.from(account);\n                  } catch (err) {}\n                }).filter(Boolean));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }]);\n\n  return Auction;\n}(mpl_core_1.Account);\n\nexports.Auction = Auction;\nAuction.EXTENDED_DATA_SIZE = 8 + 9 + 2 + 200;","map":null,"metadata":{},"sourceType":"script"}