{"version":3,"sources":["App.js","index.js"],"names":["require","Metadata","programs","metadata","market","PublicKey","wallets","getPhantomWallet","network","opts","preflightCommitment","programID","idl","address","SystemProgram","web3","App","_useState","useState","_useState2","Object","_Users_daniel_dev_caroline_swap_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","walletNfts","setWalletNfts","_useState3","_useState4","listings","setListings","wallet","useWallet","getProvider","_getProvider","apply","this","arguments","_Users_daniel_dev_caroline_swap_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_daniel_dev_caroline_swap_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee8","connection","provider","wrap","_context8","prev","next","Connection","Provider","abrupt","stop","useEffect","_callee","_context","publicKey","fetchListings","catch","console","error","fetchWalletNfts","useCallback","_callee2","tokenAccounts","wallet_nfts","i","pubkey","tokenAccountMint","mintInfo","tokenBalance","pda","uri","_yield$axios$get","data","_context2","sent","getParsedTokenAccountsByOwner","programId","TOKEN_PROGRAM_ID","value","length","account","parsed","info","mint","getParsedAccountInfo","parseInt","tokenAmount","amount","supply","getPDA","load","axios","get","push","t0","log","_callee3","program","user_listings","accounts","listing","_yield$axios$get2","_context3","Program","getProgramAccounts","fetch","nftMint","seller","equals","t1","activeListings","userListings","NFTCard","_ref4","props","_useState5","_useState6","listingPrice","setListingPrice","_handleClick","_callee4","price","nftAccount","_yield$PublicKey$find","_yield$PublicKey$find2","listingBump","_yield$PublicKey$find3","_yield$PublicKey$find4","nftVault","nftVaultBump","tx","_context4","anchor","LAMPORTS_PER_SOL","findProgramAddress","Buffer","from","bytes","utf8","encode","toBuffer","rpc","createListing","signer","systemProgram","tokenProgram","rent","SYSVAR_RENT_PUBKEY","signers","keys","constructor","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","react_bootstrap_Spinner__WEBPACK_IMPORTED_MODULE_21__","animation","role","className","react_bootstrap_Card__WEBPACK_IMPORTED_MODULE_17__","react_bootstrap_Container__WEBPACK_IMPORTED_MODULE_14__","Img","src","image","Body","type","min","placeholder","onChange","event","target","onClick","e","handleClick","ListingCard","_ref5","_handleClick2","_callee5","_market","buyerNFTAcc","_yield$PublicKey$find5","_yield$PublicKey$find6","_yield$PublicKey$find7","_yield$PublicKey$find8","marketVault","marketVaultBump","_yield$PublicKey$find9","_yield$PublicKey$find10","_context5","Keypair","generate","NATIVE_MINT","buy","signerNftAcc","nativeMint","alt","width","height","ask","toNumber","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_18__","UserListingCard","_ref6","_useState7","_useState8","_handleClose","_callee6","sellerNFTAcc","_market2","_yield$PublicKey$find11","_yield$PublicKey$find12","_yield$PublicKey$find13","_yield$PublicKey$find14","_context6","closeListing","_handleUpdate","_callee7","_market3","_yield$PublicKey$find15","_yield$PublicKey$find16","_context7","handleUpdate","handleClose","ActiveListings","_ref7","react_bootstrap_Row__WEBPACK_IMPORTED_MODULE_19__","xs","md","map","idx","react_bootstrap_Col__WEBPACK_IMPORTED_MODULE_20__","key","UserListings","_ref8","UserNFTs","_ref9","acc","Home","Fragment","Listings","Wallet","connected","react_bootstrap_Navbar__WEBPACK_IMPORTED_MODULE_22__","sticky","Brand","href","react_bootstrap_Nav__WEBPACK_IMPORTED_MODULE_23__","Link","react_router_dom__WEBPACK_IMPORTED_MODULE_15__","path","element","style","display","justifyContent","marginTop","_solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_12__","AppWithProvider","_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__","endpoint","_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_11__","autoConnect","react_router_dom__WEBPACK_IMPORTED_MODULE_16__","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App_js__WEBPACK_IMPORTED_MODULE_3__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfea6dd8.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Connection, PublicKey, Keypair, clusterApiUrl, LAMPORTS_PER_SOL, SYSVAR_RENT_PUBKEY } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID, NATIVE_MINT } from \"@solana/spl-token\";\nimport {\n  Program, Provider, web3\n} from '@project-serum/anchor';\nimport idl from './idl.json';\nimport * as anchor from \"@project-serum/anchor\";\n\n// Wallet adapter\nimport { getPhantomWallet } from '@solana/wallet-adapter-wallets';\nimport { useWallet, WalletProvider, ConnectionProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\n\nimport { programs } from '@metaplex/js';\n\n// Bootstrap components\nimport Container from 'react-bootstrap/Container';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n// https\nimport axios from 'axios';\n\n// CSS\nimport './App.css';\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\n// http\nconst { metadata: { Metadata } } = programs;\n\n// Globals\nconst market = new PublicKey(\"33Tz73Cng8inaqTxGhv2HT2bZkip2axJJSEsa9B21ZR7\");\nconst wallets = [getPhantomWallet()]\n//const network = clusterApiUrl('devnet');\nconst network = \"https://ssc-dao.genesysgo.net/\"\nconst opts = {\n  preflightCommitment: \"processed\"\n}\nconst programID = new PublicKey(idl.metadata.address);\nconst { SystemProgram } = web3;\n\nfunction App() {\n  // Wallet NFTs\n  const [walletNfts, setWalletNfts] = useState([]);\n  // Listings on market\n  const [listings, setListings] = useState([]);\n  // Wallet connected\n  const wallet = useWallet()\n  // Connection to Solana rpc\n  async function getProvider() {\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new Provider(\n      connection, wallet, opts.preflightCommitment,\n    );\n    return provider;\n  }\n  // App render\n  useEffect(() => {\n    (async () => {\n      if (\n        !wallet ||\n        !wallet.publicKey\n      ) {\n        return;\n      }\n      // Listings\n      fetchListings().catch(console.error);\n      // Wallet NFTs\n      fetchWalletNfts().catch(console.error);\n    })();\n  }, [wallet]);\n\n  // Fetch wallet's nfts\n  const fetchWalletNfts = useCallback(async () => {\n    const provider = await getProvider();\n    // // TODO: This is slow\n    let tokenAccounts = await provider.connection.getParsedTokenAccountsByOwner(provider.wallet.publicKey, { programId: TOKEN_PROGRAM_ID });\n    let wallet_nfts = []\n    for (let i = 0; i < tokenAccounts.value.length; i++) {\n      let pubkey = tokenAccounts.value[i].pubkey\n      let tokenAccountMint = new PublicKey(tokenAccounts.value[i].account.data.parsed.info.mint);\n      let mintInfo = await provider.connection.getParsedAccountInfo(tokenAccountMint)\n      let tokenBalance = parseInt(tokenAccounts.value[i].account.data.parsed.info.tokenAmount.amount);\n      let mintSupply = parseInt(mintInfo.value.data.parsed.info.supply);\n      // NFT\n      if (mintSupply === 1 && tokenBalance === 1) {\n        // Metaplex data\n        try {\n          const pda = await Metadata.getPDA(tokenAccountMint);\n          const metadata = await Metadata.load(provider.connection, pda);\n          let uri = metadata.data.data.uri\n          const { data } = await axios.get(uri);\n          // Todo: handle non metaplex nfts\n          wallet_nfts.push({ \"pubkey\": pubkey, \"mint\": tokenAccountMint, \"data\": data })\n        }\n        catch (err) {\n          console.log(err)\n        }\n      }\n    }\n    setWalletNfts(wallet_nfts)\n\n  });\n\n  const fetchListings = useCallback(async () => {\n    const provider = await getProvider();\n    const program = new Program(idl, programID, provider);\n    let listings = []\n    let user_listings = []\n    let accounts = await provider.connection.getProgramAccounts(program.programId);\n    for (let i = 0; i < accounts.length; i++) {\n      // Try to fetch the listing account, throws error if its not a listing\n      try {\n        let listing = await program.account.listing.fetch(accounts[i].pubkey);\n        // Metaplex data\n        try {\n          const pda = await Metadata.getPDA(listing.nftMint);\n          const metadata = await Metadata.load(provider.connection, pda);\n          let uri = metadata.data.data.uri\n          const { data } = await axios.get(uri);\n          // Todo: handle non metaplex nfts\n          listings.push({ \"listing\": listing, \"metadata\": data })\n          // user listing\n          if (listing.seller.equals(provider.wallet.publicKey)) {\n            user_listings.push({ \"listing\": listing, \"metadata\": data })\n          }\n        }\n        catch (err) {\n          console.log(err)\n        }\n      }\n      catch (err) {\n      }\n    }\n    setListings({ 'activeListings': listings, 'userListings': user_listings });\n  });\n\n  function NFTCard({ props }) {\n    // Listing price\n    const [listingPrice, setListingPrice] = useState(\"\");\n    async function handleClick() {\n      try {\n        let price = new anchor.BN(listingPrice * LAMPORTS_PER_SOL)\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n\n        // Nft account info for the card\n        let nftAccount = props.pubkey;\n        let nftMint = props.mint;\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            nftMint.toBuffer(),\n            provider.wallet.publicKey.toBuffer(),\n          ],\n          program.programId\n        );\n        // NFT vault PDA\n        let [nftVault, nftVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            nftMint.toBuffer(),\n          ],\n          program.programId\n        );\n        // Create listing\n        const tx = await program.rpc.createListing(\n          price,\n          listingBump,\n          nftVaultBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              listing: listing,\n              market: market,\n              nftVault: nftVault,\n              nftAccount: nftAccount,\n              nftMint: nftMint,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY\n            },\n            signers: []\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n    }\n\n    if (Object.keys(props).length === 0 && props.constructor === Object) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return (\n        <Card className=\"card\">\n          <Container>\n            <Card.Img className=\"nft\" src={props.data.image} />\n          </Container>\n          <Card.Body className=\"card-body justify-content-center\">\n            <div className=\"input-group mb-3\">\n              <input type=\"text\" className=\"form-control\" min=\"0\" placeholder=\"SOL\" value={listingPrice} onChange={event => {\n                setListingPrice(event.target.value);\n              }}\n              ></input>\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={(e) => handleClick()}>List</button>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      );\n    }\n  }\n\n  function ListingCard({ props }) {\n    // Buy nft\n    async function handleClick() {\n      try {\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n        // Mint + market\n        let nftMint = new PublicKey(props.nftMint);\n        let market = new PublicKey(props.market)\n        let buyerNFTAcc = Keypair.generate();\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            props.nftMint.toBuffer(),\n            props.seller.toBuffer(),\n          ],\n          program.programId\n        );\n        // Market vault PDA\n        let [marketVault, marketVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            market.toBuffer(),\n            NATIVE_MINT.toBuffer(),\n          ],\n          program.programId\n        );\n        // NFT vault PDA\n        let [nftVault, nftVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            nftMint.toBuffer(),\n          ],\n          program.programId\n        );\n        // Buy nft\n        const tx = await program.rpc.buy(\n          listingBump,\n          marketVaultBump,\n          nftVaultBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              signerNftAcc: buyerNFTAcc.publicKey,\n              listing: listing,\n              seller: props.seller,\n              market: market,\n              marketVault: marketVault,\n              nftVault: nftVault,\n              nftMint: nftMint,\n              nativeMint: NATIVE_MINT,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [buyerNFTAcc]\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n    }\n\n    return (\n      <Card className=\"card\">\n        <div className=\"nft-price inline\">\n          <img\n            alt=\"\"\n            src=\"../sol.svg\"\n            width=\"15\"\n            height=\"15\"\n            className=\"d-inline-block\"\n          />{' '}\n          {props.listing.ask.toNumber() / LAMPORTS_PER_SOL}\n        </div>\n        <Container>\n          <Card.Img className=\"nft\" src={props.metadata.image} />\n        </Container>\n        <Card.Body className=\"card-body justify-content-center\">\n          <Button className=\"submit-btn\" onClick={() => handleClick()}>Buy</Button>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  function UserListingCard({ props }) {\n    const [listingPrice, setListingPrice] = useState(\"\");\n    // close listing\n    async function handleClose() {\n      try {\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n\n        let sellerNFTAcc = Keypair.generate();\n\n        // Mint + market\n        let nftMint = new PublicKey(props.listing.nftMint);\n        let market = new PublicKey(props.listing.market)\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            nftMint.toBuffer(),\n            provider.wallet.publicKey.toBuffer(),\n          ],\n          program.programId\n        );\n        // NFT vault PDA\n        let [nftVault, nftVaultBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"vault\")),\n            nftMint.toBuffer(),\n          ],\n          program.programId\n        );\n        // Close listing\n        const tx = await program.rpc.closeListing(\n          listingBump,\n          nftVaultBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              signerNftAcc: sellerNFTAcc.publicKey,\n              nftVault: nftVault,\n              listing: listing,\n              market: market,\n              nftMint: nftMint,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n              rent: SYSVAR_RENT_PUBKEY\n            },\n            signers: [sellerNFTAcc]\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n\n    }\n    async function handleUpdate() {\n      try {\n        let price = new anchor.BN(listingPrice * LAMPORTS_PER_SOL)\n        // Program\n        const provider = await getProvider();\n        const program = new Program(idl, programID, provider);\n\n        // Mint + market\n        let nftMint = new PublicKey(props.listing.nftMint);\n        let market = new PublicKey(props.listing.market)\n        // Listing PDA\n        let [listing, listingBump] = await PublicKey.findProgramAddress(\n          [\n            Buffer.from(anchor.utils.bytes.utf8.encode(\"listing\")),\n            market.toBuffer(),\n            nftMint.toBuffer(),\n            provider.wallet.publicKey.toBuffer(),\n          ],\n          program.programId\n        );\n        // Update listing ask\n        const tx = await program.rpc.ask(\n          price,\n          listingBump,\n          {\n            accounts: {\n              signer: provider.wallet.publicKey,\n              listing: listing,\n              market: market,\n              nftMint: nftMint,\n              systemProgram: SystemProgram.programId,\n              tokenProgram: TOKEN_PROGRAM_ID,\n            },\n            signers: []\n          });\n        console.log(tx)\n      }\n      catch (err) {\n        console.log(err)\n      }\n    }\n\n    return (\n      <Card className=\"card\">\n        <div className=\"nft-price inline\">\n          <img\n            alt=\"\"\n            src=\"../sol.svg\"\n            width=\"15\"\n            height=\"15\"\n            className=\"d-inline-block\"\n          />{' '}\n          {props.listing.ask.toNumber() / LAMPORTS_PER_SOL}\n        </div>\n        <Container>\n          <Card.Img className=\"nft\" src={props.metadata.image} />\n        </Container>\n        <Card.Body className=\"card-body justify-content-center\">\n          <div className=\"input-group mb-3\">\n            <input type=\"text\" className=\"form-control\" min=\"0\" placeholder=\"SOL\" value={listingPrice} onChange={event => {\n              setListingPrice(event.target.value);\n            }}\n            ></input>\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={(e) => handleUpdate()}>Update</button>\n            </div>\n          </div>\n          <button className=\"close-btn\" type=\"button\" onClick={(e) => handleClose()}>Close listing</button>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  function ActiveListings({ props }) {\n    if (props.length === 0) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return (\n        <Container className=\"card-container\">\n          <Row xs={\"auto\"} md={\"auto\"} className=\"row\">\n            {props.activeListings.map((listing, idx) => (\n              <Col className=\"col top-buffer\" key={idx}>\n                <ListingCard props={listing} />\n              </Col>\n            ))}\n          </Row>\n        </Container >\n      );\n    }\n  }\n\n  function UserListings({ props }) {\n    if (props.length === 0) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return (\n        <Container className=\"card-container\">\n          <Row xs={\"auto\"} md={\"auto\"} className=\"row\">\n            {props.userListings.map((listing, idx) => (\n              <Col className=\"col top-buffer\" key={idx}>\n                <UserListingCard props={listing} />\n              </Col>\n            ))}\n          </Row>\n        </Container >\n      );\n    }\n  }\n\n  function UserNFTs({ props }) {\n    if (Object.keys(walletNfts).length === 0) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      )\n    }\n    else {\n      return (\n        <Container className=\"card-container\">\n          <Row xs={\"auto\"} md={\"auto\"} className=\"row\">\n            {props.map((acc, idx) => (\n              <Col className=\"col top-buffer\" key={idx}>\n                <NFTCard props={acc} />\n              </Col>\n            ))}\n          </Row>\n        </Container >\n      );\n    }\n  }\n\n  function Home() {\n    return (\n      <>\n        <ActiveListings props={listings} />\n      </>\n    );\n  }\n\n  function Listings() {\n    return (\n      <>\n        <UserListings props={listings} />\n      </>\n    );\n  }\n\n  function Wallet() {\n    return (\n      <>\n        <UserNFTs props={walletNfts} />\n      </>\n    );\n  }\n\n  if (!wallet.connected) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '100px' }}>\n        <WalletMultiButton />\n      </div>\n    )\n  } else {\n    return (\n      <Container className=\"container-top\">\n        <Navbar sticky=\"top\">\n          <Container className=\"nav-container\">\n            <Navbar.Brand href=\"/\">\n              <img\n                alt=\"\"\n                src=\"../small.png\"\n                height=\"75\"\n                className=\"logo d-inline-block align-middle\"\n              />{' '}\n              <img\n                alt=\"\"\n                src=\"../logo.png\"\n                width=\"190\"\n                height=\"25\"\n                className=\"logo-banner d-inline-block align-middle\"\n              />{' '}\n            </Navbar.Brand>\n            <Nav className=\"nav-middle\">\n              <Nav.Link href=\"/listings\">My Listings</Nav.Link>\n              <Nav.Link href=\"/wallet\">Wallet</Nav.Link>\n            </Nav>\n            <a href=\"https://discord.gg/NJ8cvqPQ\">\n              <img\n                alt=\"\"\n                src=\"../discord1.svg\"\n                width=\"35\"\n                height=\"35\"\n                className=\"logo-banner d-inline-block align-middle\"\n                href=\"https://discord.gg/NJ8cvqPQ\"\n              />{' '}\n            </a>\n          </Container>\n        </Navbar >\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/wallet\" element={<Wallet />} />\n          <Route path=\"/listings\" element={<Listings />} />\n        </Routes>\n      </Container >\n    );\n  }\n}\n\nconst AppWithProvider = () => (\n  <ConnectionProvider endpoint={network}>\n    <WalletProvider wallets={wallets} autoConnect>\n      <WalletModalProvider>\n        <Router>\n          <App />\n        </Router>\n      </WalletModalProvider>\n    </WalletProvider>\n  </ConnectionProvider>\n)\n\nexport default AppWithProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWithProvider from './App.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <AppWithProvider />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}